
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model change_requests
 * 
 */
export type change_requests = $Result.DefaultSelection<Prisma.$change_requestsPayload>
/**
 * Model notifications
 * 
 */
export type notifications = $Result.DefaultSelection<Prisma.$notificationsPayload>
/**
 * Model team_invitations
 * 
 */
export type team_invitations = $Result.DefaultSelection<Prisma.$team_invitationsPayload>
/**
 * Model team_members
 * 
 */
export type team_members = $Result.DefaultSelection<Prisma.$team_membersPayload>
/**
 * Model teams
 * 
 */
export type teams = $Result.DefaultSelection<Prisma.$teamsPayload>
/**
 * Model transactions
 * 
 */
export type transactions = $Result.DefaultSelection<Prisma.$transactionsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const change_request_status: {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

export type change_request_status = (typeof change_request_status)[keyof typeof change_request_status]


export const invitation_status: {
  pending: 'pending',
  accepted: 'accepted',
  rejected: 'rejected',
  expired: 'expired'
};

export type invitation_status = (typeof invitation_status)[keyof typeof invitation_status]


export const transaction_type: {
  income: 'income',
  expense: 'expense'
};

export type transaction_type = (typeof transaction_type)[keyof typeof transaction_type]

}

export type change_request_status = $Enums.change_request_status

export const change_request_status: typeof $Enums.change_request_status

export type invitation_status = $Enums.invitation_status

export const invitation_status: typeof $Enums.invitation_status

export type transaction_type = $Enums.transaction_type

export const transaction_type: typeof $Enums.transaction_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.change_requests`: Exposes CRUD operations for the **change_requests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Change_requests
    * const change_requests = await prisma.change_requests.findMany()
    * ```
    */
  get change_requests(): Prisma.change_requestsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notifications`: Exposes CRUD operations for the **notifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notifications.findMany()
    * ```
    */
  get notifications(): Prisma.notificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.team_invitations`: Exposes CRUD operations for the **team_invitations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Team_invitations
    * const team_invitations = await prisma.team_invitations.findMany()
    * ```
    */
  get team_invitations(): Prisma.team_invitationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.team_members`: Exposes CRUD operations for the **team_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Team_members
    * const team_members = await prisma.team_members.findMany()
    * ```
    */
  get team_members(): Prisma.team_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.teams`: Exposes CRUD operations for the **teams** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Teams
    * const teams = await prisma.teams.findMany()
    * ```
    */
  get teams(): Prisma.teamsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transactions`: Exposes CRUD operations for the **transactions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transactions.findMany()
    * ```
    */
  get transactions(): Prisma.transactionsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    change_requests: 'change_requests',
    notifications: 'notifications',
    team_invitations: 'team_invitations',
    team_members: 'team_members',
    teams: 'teams',
    transactions: 'transactions'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "change_requests" | "notifications" | "team_invitations" | "team_members" | "teams" | "transactions"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      change_requests: {
        payload: Prisma.$change_requestsPayload<ExtArgs>
        fields: Prisma.change_requestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.change_requestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.change_requestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          findFirst: {
            args: Prisma.change_requestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.change_requestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          findMany: {
            args: Prisma.change_requestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>[]
          }
          create: {
            args: Prisma.change_requestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          createMany: {
            args: Prisma.change_requestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.change_requestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>[]
          }
          delete: {
            args: Prisma.change_requestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          update: {
            args: Prisma.change_requestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          deleteMany: {
            args: Prisma.change_requestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.change_requestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.change_requestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>[]
          }
          upsert: {
            args: Prisma.change_requestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$change_requestsPayload>
          }
          aggregate: {
            args: Prisma.Change_requestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChange_requests>
          }
          groupBy: {
            args: Prisma.change_requestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Change_requestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.change_requestsCountArgs<ExtArgs>
            result: $Utils.Optional<Change_requestsCountAggregateOutputType> | number
          }
        }
      }
      notifications: {
        payload: Prisma.$notificationsPayload<ExtArgs>
        fields: Prisma.notificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findFirst: {
            args: Prisma.notificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findMany: {
            args: Prisma.notificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          create: {
            args: Prisma.notificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          createMany: {
            args: Prisma.notificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          delete: {
            args: Prisma.notificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          update: {
            args: Prisma.notificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          deleteMany: {
            args: Prisma.notificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          upsert: {
            args: Prisma.notificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          aggregate: {
            args: Prisma.NotificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotifications>
          }
          groupBy: {
            args: Prisma.notificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationsCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationsCountAggregateOutputType> | number
          }
        }
      }
      team_invitations: {
        payload: Prisma.$team_invitationsPayload<ExtArgs>
        fields: Prisma.team_invitationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.team_invitationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.team_invitationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          findFirst: {
            args: Prisma.team_invitationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.team_invitationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          findMany: {
            args: Prisma.team_invitationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>[]
          }
          create: {
            args: Prisma.team_invitationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          createMany: {
            args: Prisma.team_invitationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.team_invitationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>[]
          }
          delete: {
            args: Prisma.team_invitationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          update: {
            args: Prisma.team_invitationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          deleteMany: {
            args: Prisma.team_invitationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.team_invitationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.team_invitationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>[]
          }
          upsert: {
            args: Prisma.team_invitationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_invitationsPayload>
          }
          aggregate: {
            args: Prisma.Team_invitationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeam_invitations>
          }
          groupBy: {
            args: Prisma.team_invitationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Team_invitationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.team_invitationsCountArgs<ExtArgs>
            result: $Utils.Optional<Team_invitationsCountAggregateOutputType> | number
          }
        }
      }
      team_members: {
        payload: Prisma.$team_membersPayload<ExtArgs>
        fields: Prisma.team_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.team_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.team_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          findFirst: {
            args: Prisma.team_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.team_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          findMany: {
            args: Prisma.team_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>[]
          }
          create: {
            args: Prisma.team_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          createMany: {
            args: Prisma.team_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.team_membersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>[]
          }
          delete: {
            args: Prisma.team_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          update: {
            args: Prisma.team_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          deleteMany: {
            args: Prisma.team_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.team_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.team_membersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>[]
          }
          upsert: {
            args: Prisma.team_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_membersPayload>
          }
          aggregate: {
            args: Prisma.Team_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeam_members>
          }
          groupBy: {
            args: Prisma.team_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Team_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.team_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Team_membersCountAggregateOutputType> | number
          }
        }
      }
      teams: {
        payload: Prisma.$teamsPayload<ExtArgs>
        fields: Prisma.teamsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.teamsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.teamsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          findFirst: {
            args: Prisma.teamsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.teamsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          findMany: {
            args: Prisma.teamsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>[]
          }
          create: {
            args: Prisma.teamsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          createMany: {
            args: Prisma.teamsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.teamsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>[]
          }
          delete: {
            args: Prisma.teamsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          update: {
            args: Prisma.teamsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          deleteMany: {
            args: Prisma.teamsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.teamsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.teamsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>[]
          }
          upsert: {
            args: Prisma.teamsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamsPayload>
          }
          aggregate: {
            args: Prisma.TeamsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeams>
          }
          groupBy: {
            args: Prisma.teamsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TeamsGroupByOutputType>[]
          }
          count: {
            args: Prisma.teamsCountArgs<ExtArgs>
            result: $Utils.Optional<TeamsCountAggregateOutputType> | number
          }
        }
      }
      transactions: {
        payload: Prisma.$transactionsPayload<ExtArgs>
        fields: Prisma.transactionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transactionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transactionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          findFirst: {
            args: Prisma.transactionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transactionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          findMany: {
            args: Prisma.transactionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          create: {
            args: Prisma.transactionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          createMany: {
            args: Prisma.transactionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transactionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          delete: {
            args: Prisma.transactionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          update: {
            args: Prisma.transactionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          deleteMany: {
            args: Prisma.transactionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transactionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transactionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>[]
          }
          upsert: {
            args: Prisma.transactionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transactionsPayload>
          }
          aggregate: {
            args: Prisma.TransactionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransactions>
          }
          groupBy: {
            args: Prisma.transactionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.transactionsCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    change_requests?: change_requestsOmit
    notifications?: notificationsOmit
    team_invitations?: team_invitationsOmit
    team_members?: team_membersOmit
    teams?: teamsOmit
    transactions?: transactionsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    change_requests: number
    notifications: number
    team_invitations: number
    team_members: number
    teams: number
    transactions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    change_requests?: boolean | UserCountOutputTypeCountChange_requestsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    team_invitations?: boolean | UserCountOutputTypeCountTeam_invitationsArgs
    team_members?: boolean | UserCountOutputTypeCountTeam_membersArgs
    teams?: boolean | UserCountOutputTypeCountTeamsArgs
    transactions?: boolean | UserCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChange_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: change_requestsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTeam_invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_invitationsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTeam_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_membersWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTeamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: teamsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
  }


  /**
   * Count Type TeamsCountOutputType
   */

  export type TeamsCountOutputType = {
    notifications: number
    team_invitations: number
    team_members: number
    transactions: number
  }

  export type TeamsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifications?: boolean | TeamsCountOutputTypeCountNotificationsArgs
    team_invitations?: boolean | TeamsCountOutputTypeCountTeam_invitationsArgs
    team_members?: boolean | TeamsCountOutputTypeCountTeam_membersArgs
    transactions?: boolean | TeamsCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * TeamsCountOutputType without action
   */
  export type TeamsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TeamsCountOutputType
     */
    select?: TeamsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TeamsCountOutputType without action
   */
  export type TeamsCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
  }

  /**
   * TeamsCountOutputType without action
   */
  export type TeamsCountOutputTypeCountTeam_invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_invitationsWhereInput
  }

  /**
   * TeamsCountOutputType without action
   */
  export type TeamsCountOutputTypeCountTeam_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_membersWhereInput
  }

  /**
   * TeamsCountOutputType without action
   */
  export type TeamsCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
  }


  /**
   * Count Type TransactionsCountOutputType
   */

  export type TransactionsCountOutputType = {
    change_requests: number
  }

  export type TransactionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    change_requests?: boolean | TransactionsCountOutputTypeCountChange_requestsArgs
  }

  // Custom InputTypes
  /**
   * TransactionsCountOutputType without action
   */
  export type TransactionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransactionsCountOutputType
     */
    select?: TransactionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransactionsCountOutputType without action
   */
  export type TransactionsCountOutputTypeCountChange_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: change_requestsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    firstName: string | null
    lastName: string | null
    email: string | null
    passwordHash: string | null
    gender: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    firstName: string | null
    lastName: string | null
    email: string | null
    passwordHash: string | null
    gender: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    firstName: number
    lastName: number
    email: number
    passwordHash: number
    gender: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    passwordHash?: true
    gender?: true
    created_at?: true
    updated_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    passwordHash?: true
    gender?: true
    created_at?: true
    updated_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    passwordHash?: true
    gender?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    passwordHash?: boolean
    gender?: boolean
    created_at?: boolean
    updated_at?: boolean
    change_requests?: boolean | User$change_requestsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    team_invitations?: boolean | User$team_invitationsArgs<ExtArgs>
    team_members?: boolean | User$team_membersArgs<ExtArgs>
    teams?: boolean | User$teamsArgs<ExtArgs>
    transactions?: boolean | User$transactionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    passwordHash?: boolean
    gender?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    passwordHash?: boolean
    gender?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    passwordHash?: boolean
    gender?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstName" | "lastName" | "email" | "passwordHash" | "gender" | "created_at" | "updated_at", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    change_requests?: boolean | User$change_requestsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    team_invitations?: boolean | User$team_invitationsArgs<ExtArgs>
    team_members?: boolean | User$team_membersArgs<ExtArgs>
    teams?: boolean | User$teamsArgs<ExtArgs>
    transactions?: boolean | User$transactionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      change_requests: Prisma.$change_requestsPayload<ExtArgs>[]
      notifications: Prisma.$notificationsPayload<ExtArgs>[]
      team_invitations: Prisma.$team_invitationsPayload<ExtArgs>[]
      team_members: Prisma.$team_membersPayload<ExtArgs>[]
      teams: Prisma.$teamsPayload<ExtArgs>[]
      transactions: Prisma.$transactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      firstName: string
      lastName: string
      email: string
      passwordHash: string
      gender: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    change_requests<T extends User$change_requestsArgs<ExtArgs> = {}>(args?: Subset<T, User$change_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_invitations<T extends User$team_invitationsArgs<ExtArgs> = {}>(args?: Subset<T, User$team_invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_members<T extends User$team_membersArgs<ExtArgs> = {}>(args?: Subset<T, User$team_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    teams<T extends User$teamsArgs<ExtArgs> = {}>(args?: Subset<T, User$teamsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transactions<T extends User$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly gender: FieldRef<"User", 'String'>
    readonly created_at: FieldRef<"User", 'DateTime'>
    readonly updated_at: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.change_requests
   */
  export type User$change_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    where?: change_requestsWhereInput
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    cursor?: change_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Change_requestsScalarFieldEnum | Change_requestsScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    cursor?: notificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * User.team_invitations
   */
  export type User$team_invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    where?: team_invitationsWhereInput
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    cursor?: team_invitationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_invitationsScalarFieldEnum | Team_invitationsScalarFieldEnum[]
  }

  /**
   * User.team_members
   */
  export type User$team_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    where?: team_membersWhereInput
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    cursor?: team_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_membersScalarFieldEnum | Team_membersScalarFieldEnum[]
  }

  /**
   * User.teams
   */
  export type User$teamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    where?: teamsWhereInput
    orderBy?: teamsOrderByWithRelationInput | teamsOrderByWithRelationInput[]
    cursor?: teamsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TeamsScalarFieldEnum | TeamsScalarFieldEnum[]
  }

  /**
   * User.transactions
   */
  export type User$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    cursor?: transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model change_requests
   */

  export type AggregateChange_requests = {
    _count: Change_requestsCountAggregateOutputType | null
    _avg: Change_requestsAvgAggregateOutputType | null
    _sum: Change_requestsSumAggregateOutputType | null
    _min: Change_requestsMinAggregateOutputType | null
    _max: Change_requestsMaxAggregateOutputType | null
  }

  export type Change_requestsAvgAggregateOutputType = {
    id: number | null
    requester_id: number | null
    target_transaction_id: number | null
  }

  export type Change_requestsSumAggregateOutputType = {
    id: number | null
    requester_id: number | null
    target_transaction_id: number | null
  }

  export type Change_requestsMinAggregateOutputType = {
    id: number | null
    requester_id: number | null
    target_transaction_id: number | null
    type: string | null
    status: $Enums.change_request_status | null
    reason: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Change_requestsMaxAggregateOutputType = {
    id: number | null
    requester_id: number | null
    target_transaction_id: number | null
    type: string | null
    status: $Enums.change_request_status | null
    reason: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Change_requestsCountAggregateOutputType = {
    id: number
    requester_id: number
    target_transaction_id: number
    type: number
    status: number
    reason: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Change_requestsAvgAggregateInputType = {
    id?: true
    requester_id?: true
    target_transaction_id?: true
  }

  export type Change_requestsSumAggregateInputType = {
    id?: true
    requester_id?: true
    target_transaction_id?: true
  }

  export type Change_requestsMinAggregateInputType = {
    id?: true
    requester_id?: true
    target_transaction_id?: true
    type?: true
    status?: true
    reason?: true
    created_at?: true
    updated_at?: true
  }

  export type Change_requestsMaxAggregateInputType = {
    id?: true
    requester_id?: true
    target_transaction_id?: true
    type?: true
    status?: true
    reason?: true
    created_at?: true
    updated_at?: true
  }

  export type Change_requestsCountAggregateInputType = {
    id?: true
    requester_id?: true
    target_transaction_id?: true
    type?: true
    status?: true
    reason?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Change_requestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which change_requests to aggregate.
     */
    where?: change_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of change_requests to fetch.
     */
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: change_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` change_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` change_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned change_requests
    **/
    _count?: true | Change_requestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Change_requestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Change_requestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Change_requestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Change_requestsMaxAggregateInputType
  }

  export type GetChange_requestsAggregateType<T extends Change_requestsAggregateArgs> = {
        [P in keyof T & keyof AggregateChange_requests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChange_requests[P]>
      : GetScalarType<T[P], AggregateChange_requests[P]>
  }




  export type change_requestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: change_requestsWhereInput
    orderBy?: change_requestsOrderByWithAggregationInput | change_requestsOrderByWithAggregationInput[]
    by: Change_requestsScalarFieldEnum[] | Change_requestsScalarFieldEnum
    having?: change_requestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Change_requestsCountAggregateInputType | true
    _avg?: Change_requestsAvgAggregateInputType
    _sum?: Change_requestsSumAggregateInputType
    _min?: Change_requestsMinAggregateInputType
    _max?: Change_requestsMaxAggregateInputType
  }

  export type Change_requestsGroupByOutputType = {
    id: number
    requester_id: number
    target_transaction_id: number
    type: string
    status: $Enums.change_request_status
    reason: string
    created_at: Date | null
    updated_at: Date | null
    _count: Change_requestsCountAggregateOutputType | null
    _avg: Change_requestsAvgAggregateOutputType | null
    _sum: Change_requestsSumAggregateOutputType | null
    _min: Change_requestsMinAggregateOutputType | null
    _max: Change_requestsMaxAggregateOutputType | null
  }

  type GetChange_requestsGroupByPayload<T extends change_requestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Change_requestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Change_requestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Change_requestsGroupByOutputType[P]>
            : GetScalarType<T[P], Change_requestsGroupByOutputType[P]>
        }
      >
    >


  export type change_requestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requester_id?: boolean
    target_transaction_id?: boolean
    type?: boolean
    status?: boolean
    reason?: boolean
    created_at?: boolean
    updated_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["change_requests"]>

  export type change_requestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requester_id?: boolean
    target_transaction_id?: boolean
    type?: boolean
    status?: boolean
    reason?: boolean
    created_at?: boolean
    updated_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["change_requests"]>

  export type change_requestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requester_id?: boolean
    target_transaction_id?: boolean
    type?: boolean
    status?: boolean
    reason?: boolean
    created_at?: boolean
    updated_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["change_requests"]>

  export type change_requestsSelectScalar = {
    id?: boolean
    requester_id?: boolean
    target_transaction_id?: boolean
    type?: boolean
    status?: boolean
    reason?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type change_requestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "requester_id" | "target_transaction_id" | "type" | "status" | "reason" | "created_at" | "updated_at", ExtArgs["result"]["change_requests"]>
  export type change_requestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }
  export type change_requestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }
  export type change_requestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | transactionsDefaultArgs<ExtArgs>
  }

  export type $change_requestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "change_requests"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      transactions: Prisma.$transactionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      requester_id: number
      target_transaction_id: number
      type: string
      status: $Enums.change_request_status
      reason: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["change_requests"]>
    composites: {}
  }

  type change_requestsGetPayload<S extends boolean | null | undefined | change_requestsDefaultArgs> = $Result.GetResult<Prisma.$change_requestsPayload, S>

  type change_requestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<change_requestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Change_requestsCountAggregateInputType | true
    }

  export interface change_requestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['change_requests'], meta: { name: 'change_requests' } }
    /**
     * Find zero or one Change_requests that matches the filter.
     * @param {change_requestsFindUniqueArgs} args - Arguments to find a Change_requests
     * @example
     * // Get one Change_requests
     * const change_requests = await prisma.change_requests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends change_requestsFindUniqueArgs>(args: SelectSubset<T, change_requestsFindUniqueArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Change_requests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {change_requestsFindUniqueOrThrowArgs} args - Arguments to find a Change_requests
     * @example
     * // Get one Change_requests
     * const change_requests = await prisma.change_requests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends change_requestsFindUniqueOrThrowArgs>(args: SelectSubset<T, change_requestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Change_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsFindFirstArgs} args - Arguments to find a Change_requests
     * @example
     * // Get one Change_requests
     * const change_requests = await prisma.change_requests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends change_requestsFindFirstArgs>(args?: SelectSubset<T, change_requestsFindFirstArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Change_requests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsFindFirstOrThrowArgs} args - Arguments to find a Change_requests
     * @example
     * // Get one Change_requests
     * const change_requests = await prisma.change_requests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends change_requestsFindFirstOrThrowArgs>(args?: SelectSubset<T, change_requestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Change_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Change_requests
     * const change_requests = await prisma.change_requests.findMany()
     * 
     * // Get first 10 Change_requests
     * const change_requests = await prisma.change_requests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const change_requestsWithIdOnly = await prisma.change_requests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends change_requestsFindManyArgs>(args?: SelectSubset<T, change_requestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Change_requests.
     * @param {change_requestsCreateArgs} args - Arguments to create a Change_requests.
     * @example
     * // Create one Change_requests
     * const Change_requests = await prisma.change_requests.create({
     *   data: {
     *     // ... data to create a Change_requests
     *   }
     * })
     * 
     */
    create<T extends change_requestsCreateArgs>(args: SelectSubset<T, change_requestsCreateArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Change_requests.
     * @param {change_requestsCreateManyArgs} args - Arguments to create many Change_requests.
     * @example
     * // Create many Change_requests
     * const change_requests = await prisma.change_requests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends change_requestsCreateManyArgs>(args?: SelectSubset<T, change_requestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Change_requests and returns the data saved in the database.
     * @param {change_requestsCreateManyAndReturnArgs} args - Arguments to create many Change_requests.
     * @example
     * // Create many Change_requests
     * const change_requests = await prisma.change_requests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Change_requests and only return the `id`
     * const change_requestsWithIdOnly = await prisma.change_requests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends change_requestsCreateManyAndReturnArgs>(args?: SelectSubset<T, change_requestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Change_requests.
     * @param {change_requestsDeleteArgs} args - Arguments to delete one Change_requests.
     * @example
     * // Delete one Change_requests
     * const Change_requests = await prisma.change_requests.delete({
     *   where: {
     *     // ... filter to delete one Change_requests
     *   }
     * })
     * 
     */
    delete<T extends change_requestsDeleteArgs>(args: SelectSubset<T, change_requestsDeleteArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Change_requests.
     * @param {change_requestsUpdateArgs} args - Arguments to update one Change_requests.
     * @example
     * // Update one Change_requests
     * const change_requests = await prisma.change_requests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends change_requestsUpdateArgs>(args: SelectSubset<T, change_requestsUpdateArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Change_requests.
     * @param {change_requestsDeleteManyArgs} args - Arguments to filter Change_requests to delete.
     * @example
     * // Delete a few Change_requests
     * const { count } = await prisma.change_requests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends change_requestsDeleteManyArgs>(args?: SelectSubset<T, change_requestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Change_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Change_requests
     * const change_requests = await prisma.change_requests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends change_requestsUpdateManyArgs>(args: SelectSubset<T, change_requestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Change_requests and returns the data updated in the database.
     * @param {change_requestsUpdateManyAndReturnArgs} args - Arguments to update many Change_requests.
     * @example
     * // Update many Change_requests
     * const change_requests = await prisma.change_requests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Change_requests and only return the `id`
     * const change_requestsWithIdOnly = await prisma.change_requests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends change_requestsUpdateManyAndReturnArgs>(args: SelectSubset<T, change_requestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Change_requests.
     * @param {change_requestsUpsertArgs} args - Arguments to update or create a Change_requests.
     * @example
     * // Update or create a Change_requests
     * const change_requests = await prisma.change_requests.upsert({
     *   create: {
     *     // ... data to create a Change_requests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Change_requests we want to update
     *   }
     * })
     */
    upsert<T extends change_requestsUpsertArgs>(args: SelectSubset<T, change_requestsUpsertArgs<ExtArgs>>): Prisma__change_requestsClient<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Change_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsCountArgs} args - Arguments to filter Change_requests to count.
     * @example
     * // Count the number of Change_requests
     * const count = await prisma.change_requests.count({
     *   where: {
     *     // ... the filter for the Change_requests we want to count
     *   }
     * })
    **/
    count<T extends change_requestsCountArgs>(
      args?: Subset<T, change_requestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Change_requestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Change_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Change_requestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Change_requestsAggregateArgs>(args: Subset<T, Change_requestsAggregateArgs>): Prisma.PrismaPromise<GetChange_requestsAggregateType<T>>

    /**
     * Group by Change_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {change_requestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends change_requestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: change_requestsGroupByArgs['orderBy'] }
        : { orderBy?: change_requestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, change_requestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChange_requestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the change_requests model
   */
  readonly fields: change_requestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for change_requests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__change_requestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transactions<T extends transactionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, transactionsDefaultArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the change_requests model
   */
  interface change_requestsFieldRefs {
    readonly id: FieldRef<"change_requests", 'Int'>
    readonly requester_id: FieldRef<"change_requests", 'Int'>
    readonly target_transaction_id: FieldRef<"change_requests", 'Int'>
    readonly type: FieldRef<"change_requests", 'String'>
    readonly status: FieldRef<"change_requests", 'change_request_status'>
    readonly reason: FieldRef<"change_requests", 'String'>
    readonly created_at: FieldRef<"change_requests", 'DateTime'>
    readonly updated_at: FieldRef<"change_requests", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * change_requests findUnique
   */
  export type change_requestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter, which change_requests to fetch.
     */
    where: change_requestsWhereUniqueInput
  }

  /**
   * change_requests findUniqueOrThrow
   */
  export type change_requestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter, which change_requests to fetch.
     */
    where: change_requestsWhereUniqueInput
  }

  /**
   * change_requests findFirst
   */
  export type change_requestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter, which change_requests to fetch.
     */
    where?: change_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of change_requests to fetch.
     */
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for change_requests.
     */
    cursor?: change_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` change_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` change_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of change_requests.
     */
    distinct?: Change_requestsScalarFieldEnum | Change_requestsScalarFieldEnum[]
  }

  /**
   * change_requests findFirstOrThrow
   */
  export type change_requestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter, which change_requests to fetch.
     */
    where?: change_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of change_requests to fetch.
     */
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for change_requests.
     */
    cursor?: change_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` change_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` change_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of change_requests.
     */
    distinct?: Change_requestsScalarFieldEnum | Change_requestsScalarFieldEnum[]
  }

  /**
   * change_requests findMany
   */
  export type change_requestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter, which change_requests to fetch.
     */
    where?: change_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of change_requests to fetch.
     */
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing change_requests.
     */
    cursor?: change_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` change_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` change_requests.
     */
    skip?: number
    distinct?: Change_requestsScalarFieldEnum | Change_requestsScalarFieldEnum[]
  }

  /**
   * change_requests create
   */
  export type change_requestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * The data needed to create a change_requests.
     */
    data: XOR<change_requestsCreateInput, change_requestsUncheckedCreateInput>
  }

  /**
   * change_requests createMany
   */
  export type change_requestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many change_requests.
     */
    data: change_requestsCreateManyInput | change_requestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * change_requests createManyAndReturn
   */
  export type change_requestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * The data used to create many change_requests.
     */
    data: change_requestsCreateManyInput | change_requestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * change_requests update
   */
  export type change_requestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * The data needed to update a change_requests.
     */
    data: XOR<change_requestsUpdateInput, change_requestsUncheckedUpdateInput>
    /**
     * Choose, which change_requests to update.
     */
    where: change_requestsWhereUniqueInput
  }

  /**
   * change_requests updateMany
   */
  export type change_requestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update change_requests.
     */
    data: XOR<change_requestsUpdateManyMutationInput, change_requestsUncheckedUpdateManyInput>
    /**
     * Filter which change_requests to update
     */
    where?: change_requestsWhereInput
    /**
     * Limit how many change_requests to update.
     */
    limit?: number
  }

  /**
   * change_requests updateManyAndReturn
   */
  export type change_requestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * The data used to update change_requests.
     */
    data: XOR<change_requestsUpdateManyMutationInput, change_requestsUncheckedUpdateManyInput>
    /**
     * Filter which change_requests to update
     */
    where?: change_requestsWhereInput
    /**
     * Limit how many change_requests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * change_requests upsert
   */
  export type change_requestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * The filter to search for the change_requests to update in case it exists.
     */
    where: change_requestsWhereUniqueInput
    /**
     * In case the change_requests found by the `where` argument doesn't exist, create a new change_requests with this data.
     */
    create: XOR<change_requestsCreateInput, change_requestsUncheckedCreateInput>
    /**
     * In case the change_requests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<change_requestsUpdateInput, change_requestsUncheckedUpdateInput>
  }

  /**
   * change_requests delete
   */
  export type change_requestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    /**
     * Filter which change_requests to delete.
     */
    where: change_requestsWhereUniqueInput
  }

  /**
   * change_requests deleteMany
   */
  export type change_requestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which change_requests to delete
     */
    where?: change_requestsWhereInput
    /**
     * Limit how many change_requests to delete.
     */
    limit?: number
  }

  /**
   * change_requests without action
   */
  export type change_requestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
  }


  /**
   * Model notifications
   */

  export type AggregateNotifications = {
    _count: NotificationsCountAggregateOutputType | null
    _avg: NotificationsAvgAggregateOutputType | null
    _sum: NotificationsSumAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  export type NotificationsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    team_id: number | null
    related_resource_id: number | null
  }

  export type NotificationsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    team_id: number | null
    related_resource_id: number | null
  }

  export type NotificationsMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    team_id: number | null
    type: string | null
    message: string | null
    is_read: boolean | null
    related_resource_id: number | null
    created_at: Date | null
  }

  export type NotificationsMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    team_id: number | null
    type: string | null
    message: string | null
    is_read: boolean | null
    related_resource_id: number | null
    created_at: Date | null
  }

  export type NotificationsCountAggregateOutputType = {
    id: number
    user_id: number
    team_id: number
    type: number
    message: number
    is_read: number
    related_resource_id: number
    created_at: number
    _all: number
  }


  export type NotificationsAvgAggregateInputType = {
    id?: true
    user_id?: true
    team_id?: true
    related_resource_id?: true
  }

  export type NotificationsSumAggregateInputType = {
    id?: true
    user_id?: true
    team_id?: true
    related_resource_id?: true
  }

  export type NotificationsMinAggregateInputType = {
    id?: true
    user_id?: true
    team_id?: true
    type?: true
    message?: true
    is_read?: true
    related_resource_id?: true
    created_at?: true
  }

  export type NotificationsMaxAggregateInputType = {
    id?: true
    user_id?: true
    team_id?: true
    type?: true
    message?: true
    is_read?: true
    related_resource_id?: true
    created_at?: true
  }

  export type NotificationsCountAggregateInputType = {
    id?: true
    user_id?: true
    team_id?: true
    type?: true
    message?: true
    is_read?: true
    related_resource_id?: true
    created_at?: true
    _all?: true
  }

  export type NotificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to aggregate.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationsMaxAggregateInputType
  }

  export type GetNotificationsAggregateType<T extends NotificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateNotifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotifications[P]>
      : GetScalarType<T[P], AggregateNotifications[P]>
  }




  export type notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithAggregationInput | notificationsOrderByWithAggregationInput[]
    by: NotificationsScalarFieldEnum[] | NotificationsScalarFieldEnum
    having?: notificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationsCountAggregateInputType | true
    _avg?: NotificationsAvgAggregateInputType
    _sum?: NotificationsSumAggregateInputType
    _min?: NotificationsMinAggregateInputType
    _max?: NotificationsMaxAggregateInputType
  }

  export type NotificationsGroupByOutputType = {
    id: number
    user_id: number
    team_id: number | null
    type: string
    message: string
    is_read: boolean | null
    related_resource_id: number | null
    created_at: Date | null
    _count: NotificationsCountAggregateOutputType | null
    _avg: NotificationsAvgAggregateOutputType | null
    _sum: NotificationsSumAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  type GetNotificationsGroupByPayload<T extends notificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
        }
      >
    >


  export type notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    team_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    related_resource_id?: boolean
    created_at?: boolean
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    team_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    related_resource_id?: boolean
    created_at?: boolean
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    team_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    related_resource_id?: boolean
    created_at?: boolean
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectScalar = {
    id?: boolean
    user_id?: boolean
    team_id?: boolean
    type?: boolean
    message?: boolean
    is_read?: boolean
    related_resource_id?: boolean
    created_at?: boolean
  }

  export type notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "team_id" | "type" | "message" | "is_read" | "related_resource_id" | "created_at", ExtArgs["result"]["notifications"]>
  export type notificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type notificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type notificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | notifications$teamsArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notifications"
    objects: {
      teams: Prisma.$teamsPayload<ExtArgs> | null
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      team_id: number | null
      type: string
      message: string
      is_read: boolean | null
      related_resource_id: number | null
      created_at: Date | null
    }, ExtArgs["result"]["notifications"]>
    composites: {}
  }

  type notificationsGetPayload<S extends boolean | null | undefined | notificationsDefaultArgs> = $Result.GetResult<Prisma.$notificationsPayload, S>

  type notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationsCountAggregateInputType | true
    }

  export interface notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notifications'], meta: { name: 'notifications' } }
    /**
     * Find zero or one Notifications that matches the filter.
     * @param {notificationsFindUniqueArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationsFindUniqueArgs>(args: SelectSubset<T, notificationsFindUniqueArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationsFindUniqueOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationsFindFirstArgs>(args?: SelectSubset<T, notificationsFindFirstArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notifications.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationsWithIdOnly = await prisma.notifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationsFindManyArgs>(args?: SelectSubset<T, notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notifications.
     * @param {notificationsCreateArgs} args - Arguments to create a Notifications.
     * @example
     * // Create one Notifications
     * const Notifications = await prisma.notifications.create({
     *   data: {
     *     // ... data to create a Notifications
     *   }
     * })
     * 
     */
    create<T extends notificationsCreateArgs>(args: SelectSubset<T, notificationsCreateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationsCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationsCreateManyArgs>(args?: SelectSubset<T, notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationsCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notifications.
     * @param {notificationsDeleteArgs} args - Arguments to delete one Notifications.
     * @example
     * // Delete one Notifications
     * const Notifications = await prisma.notifications.delete({
     *   where: {
     *     // ... filter to delete one Notifications
     *   }
     * })
     * 
     */
    delete<T extends notificationsDeleteArgs>(args: SelectSubset<T, notificationsDeleteArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notifications.
     * @param {notificationsUpdateArgs} args - Arguments to update one Notifications.
     * @example
     * // Update one Notifications
     * const notifications = await prisma.notifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationsUpdateArgs>(args: SelectSubset<T, notificationsUpdateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationsDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationsDeleteManyArgs>(args?: SelectSubset<T, notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationsUpdateManyArgs>(args: SelectSubset<T, notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationsUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notifications.
     * @param {notificationsUpsertArgs} args - Arguments to update or create a Notifications.
     * @example
     * // Update or create a Notifications
     * const notifications = await prisma.notifications.upsert({
     *   create: {
     *     // ... data to create a Notifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notifications we want to update
     *   }
     * })
     */
    upsert<T extends notificationsUpsertArgs>(args: SelectSubset<T, notificationsUpsertArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notifications.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationsCountArgs>(
      args?: Subset<T, notificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationsAggregateArgs>(args: Subset<T, NotificationsAggregateArgs>): Prisma.PrismaPromise<GetNotificationsAggregateType<T>>

    /**
     * Group by Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationsGroupByArgs['orderBy'] }
        : { orderBy?: notificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notifications model
   */
  readonly fields: notificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    teams<T extends notifications$teamsArgs<ExtArgs> = {}>(args?: Subset<T, notifications$teamsArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notifications model
   */
  interface notificationsFieldRefs {
    readonly id: FieldRef<"notifications", 'Int'>
    readonly user_id: FieldRef<"notifications", 'Int'>
    readonly team_id: FieldRef<"notifications", 'Int'>
    readonly type: FieldRef<"notifications", 'String'>
    readonly message: FieldRef<"notifications", 'String'>
    readonly is_read: FieldRef<"notifications", 'Boolean'>
    readonly related_resource_id: FieldRef<"notifications", 'Int'>
    readonly created_at: FieldRef<"notifications", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notifications findUnique
   */
  export type notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findUniqueOrThrow
   */
  export type notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findFirst
   */
  export type notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findFirstOrThrow
   */
  export type notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findMany
   */
  export type notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications create
   */
  export type notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a notifications.
     */
    data: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
  }

  /**
   * notifications createMany
   */
  export type notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notifications createManyAndReturn
   */
  export type notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notifications update
   */
  export type notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a notifications.
     */
    data: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
    /**
     * Choose, which notifications to update.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications updateMany
   */
  export type notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notifications updateManyAndReturn
   */
  export type notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * notifications upsert
   */
  export type notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the notifications to update in case it exists.
     */
    where: notificationsWhereUniqueInput
    /**
     * In case the notifications found by the `where` argument doesn't exist, create a new notifications with this data.
     */
    create: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
    /**
     * In case the notifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
  }

  /**
   * notifications delete
   */
  export type notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter which notifications to delete.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications deleteMany
   */
  export type notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notifications.teams
   */
  export type notifications$teamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    where?: teamsWhereInput
  }

  /**
   * notifications without action
   */
  export type notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
  }


  /**
   * Model team_invitations
   */

  export type AggregateTeam_invitations = {
    _count: Team_invitationsCountAggregateOutputType | null
    _avg: Team_invitationsAvgAggregateOutputType | null
    _sum: Team_invitationsSumAggregateOutputType | null
    _min: Team_invitationsMinAggregateOutputType | null
    _max: Team_invitationsMaxAggregateOutputType | null
  }

  export type Team_invitationsAvgAggregateOutputType = {
    id: number | null
    team_id: number | null
    inviter_id: number | null
  }

  export type Team_invitationsSumAggregateOutputType = {
    id: number | null
    team_id: number | null
    inviter_id: number | null
  }

  export type Team_invitationsMinAggregateOutputType = {
    id: number | null
    token: string | null
    team_id: number | null
    inviter_id: number | null
    invitee_email: string | null
    status: $Enums.invitation_status | null
    created_at: Date | null
    expires_at: Date | null
  }

  export type Team_invitationsMaxAggregateOutputType = {
    id: number | null
    token: string | null
    team_id: number | null
    inviter_id: number | null
    invitee_email: string | null
    status: $Enums.invitation_status | null
    created_at: Date | null
    expires_at: Date | null
  }

  export type Team_invitationsCountAggregateOutputType = {
    id: number
    token: number
    team_id: number
    inviter_id: number
    invitee_email: number
    status: number
    created_at: number
    expires_at: number
    _all: number
  }


  export type Team_invitationsAvgAggregateInputType = {
    id?: true
    team_id?: true
    inviter_id?: true
  }

  export type Team_invitationsSumAggregateInputType = {
    id?: true
    team_id?: true
    inviter_id?: true
  }

  export type Team_invitationsMinAggregateInputType = {
    id?: true
    token?: true
    team_id?: true
    inviter_id?: true
    invitee_email?: true
    status?: true
    created_at?: true
    expires_at?: true
  }

  export type Team_invitationsMaxAggregateInputType = {
    id?: true
    token?: true
    team_id?: true
    inviter_id?: true
    invitee_email?: true
    status?: true
    created_at?: true
    expires_at?: true
  }

  export type Team_invitationsCountAggregateInputType = {
    id?: true
    token?: true
    team_id?: true
    inviter_id?: true
    invitee_email?: true
    status?: true
    created_at?: true
    expires_at?: true
    _all?: true
  }

  export type Team_invitationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_invitations to aggregate.
     */
    where?: team_invitationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_invitations to fetch.
     */
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: team_invitationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned team_invitations
    **/
    _count?: true | Team_invitationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Team_invitationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Team_invitationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Team_invitationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Team_invitationsMaxAggregateInputType
  }

  export type GetTeam_invitationsAggregateType<T extends Team_invitationsAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam_invitations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam_invitations[P]>
      : GetScalarType<T[P], AggregateTeam_invitations[P]>
  }




  export type team_invitationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_invitationsWhereInput
    orderBy?: team_invitationsOrderByWithAggregationInput | team_invitationsOrderByWithAggregationInput[]
    by: Team_invitationsScalarFieldEnum[] | Team_invitationsScalarFieldEnum
    having?: team_invitationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Team_invitationsCountAggregateInputType | true
    _avg?: Team_invitationsAvgAggregateInputType
    _sum?: Team_invitationsSumAggregateInputType
    _min?: Team_invitationsMinAggregateInputType
    _max?: Team_invitationsMaxAggregateInputType
  }

  export type Team_invitationsGroupByOutputType = {
    id: number
    token: string
    team_id: number
    inviter_id: number
    invitee_email: string
    status: $Enums.invitation_status
    created_at: Date | null
    expires_at: Date | null
    _count: Team_invitationsCountAggregateOutputType | null
    _avg: Team_invitationsAvgAggregateOutputType | null
    _sum: Team_invitationsSumAggregateOutputType | null
    _min: Team_invitationsMinAggregateOutputType | null
    _max: Team_invitationsMaxAggregateOutputType | null
  }

  type GetTeam_invitationsGroupByPayload<T extends team_invitationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Team_invitationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Team_invitationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Team_invitationsGroupByOutputType[P]>
            : GetScalarType<T[P], Team_invitationsGroupByOutputType[P]>
        }
      >
    >


  export type team_invitationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    team_id?: boolean
    inviter_id?: boolean
    invitee_email?: boolean
    status?: boolean
    created_at?: boolean
    expires_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_invitations"]>

  export type team_invitationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    team_id?: boolean
    inviter_id?: boolean
    invitee_email?: boolean
    status?: boolean
    created_at?: boolean
    expires_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_invitations"]>

  export type team_invitationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    team_id?: boolean
    inviter_id?: boolean
    invitee_email?: boolean
    status?: boolean
    created_at?: boolean
    expires_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_invitations"]>

  export type team_invitationsSelectScalar = {
    id?: boolean
    token?: boolean
    team_id?: boolean
    inviter_id?: boolean
    invitee_email?: boolean
    status?: boolean
    created_at?: boolean
    expires_at?: boolean
  }

  export type team_invitationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "team_id" | "inviter_id" | "invitee_email" | "status" | "created_at" | "expires_at", ExtArgs["result"]["team_invitations"]>
  export type team_invitationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }
  export type team_invitationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }
  export type team_invitationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
  }

  export type $team_invitationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "team_invitations"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      teams: Prisma.$teamsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token: string
      team_id: number
      inviter_id: number
      invitee_email: string
      status: $Enums.invitation_status
      created_at: Date | null
      expires_at: Date | null
    }, ExtArgs["result"]["team_invitations"]>
    composites: {}
  }

  type team_invitationsGetPayload<S extends boolean | null | undefined | team_invitationsDefaultArgs> = $Result.GetResult<Prisma.$team_invitationsPayload, S>

  type team_invitationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<team_invitationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Team_invitationsCountAggregateInputType | true
    }

  export interface team_invitationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['team_invitations'], meta: { name: 'team_invitations' } }
    /**
     * Find zero or one Team_invitations that matches the filter.
     * @param {team_invitationsFindUniqueArgs} args - Arguments to find a Team_invitations
     * @example
     * // Get one Team_invitations
     * const team_invitations = await prisma.team_invitations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends team_invitationsFindUniqueArgs>(args: SelectSubset<T, team_invitationsFindUniqueArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Team_invitations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {team_invitationsFindUniqueOrThrowArgs} args - Arguments to find a Team_invitations
     * @example
     * // Get one Team_invitations
     * const team_invitations = await prisma.team_invitations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends team_invitationsFindUniqueOrThrowArgs>(args: SelectSubset<T, team_invitationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_invitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsFindFirstArgs} args - Arguments to find a Team_invitations
     * @example
     * // Get one Team_invitations
     * const team_invitations = await prisma.team_invitations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends team_invitationsFindFirstArgs>(args?: SelectSubset<T, team_invitationsFindFirstArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_invitations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsFindFirstOrThrowArgs} args - Arguments to find a Team_invitations
     * @example
     * // Get one Team_invitations
     * const team_invitations = await prisma.team_invitations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends team_invitationsFindFirstOrThrowArgs>(args?: SelectSubset<T, team_invitationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Team_invitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Team_invitations
     * const team_invitations = await prisma.team_invitations.findMany()
     * 
     * // Get first 10 Team_invitations
     * const team_invitations = await prisma.team_invitations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const team_invitationsWithIdOnly = await prisma.team_invitations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends team_invitationsFindManyArgs>(args?: SelectSubset<T, team_invitationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Team_invitations.
     * @param {team_invitationsCreateArgs} args - Arguments to create a Team_invitations.
     * @example
     * // Create one Team_invitations
     * const Team_invitations = await prisma.team_invitations.create({
     *   data: {
     *     // ... data to create a Team_invitations
     *   }
     * })
     * 
     */
    create<T extends team_invitationsCreateArgs>(args: SelectSubset<T, team_invitationsCreateArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Team_invitations.
     * @param {team_invitationsCreateManyArgs} args - Arguments to create many Team_invitations.
     * @example
     * // Create many Team_invitations
     * const team_invitations = await prisma.team_invitations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends team_invitationsCreateManyArgs>(args?: SelectSubset<T, team_invitationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Team_invitations and returns the data saved in the database.
     * @param {team_invitationsCreateManyAndReturnArgs} args - Arguments to create many Team_invitations.
     * @example
     * // Create many Team_invitations
     * const team_invitations = await prisma.team_invitations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Team_invitations and only return the `id`
     * const team_invitationsWithIdOnly = await prisma.team_invitations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends team_invitationsCreateManyAndReturnArgs>(args?: SelectSubset<T, team_invitationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Team_invitations.
     * @param {team_invitationsDeleteArgs} args - Arguments to delete one Team_invitations.
     * @example
     * // Delete one Team_invitations
     * const Team_invitations = await prisma.team_invitations.delete({
     *   where: {
     *     // ... filter to delete one Team_invitations
     *   }
     * })
     * 
     */
    delete<T extends team_invitationsDeleteArgs>(args: SelectSubset<T, team_invitationsDeleteArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Team_invitations.
     * @param {team_invitationsUpdateArgs} args - Arguments to update one Team_invitations.
     * @example
     * // Update one Team_invitations
     * const team_invitations = await prisma.team_invitations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends team_invitationsUpdateArgs>(args: SelectSubset<T, team_invitationsUpdateArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Team_invitations.
     * @param {team_invitationsDeleteManyArgs} args - Arguments to filter Team_invitations to delete.
     * @example
     * // Delete a few Team_invitations
     * const { count } = await prisma.team_invitations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends team_invitationsDeleteManyArgs>(args?: SelectSubset<T, team_invitationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Team_invitations
     * const team_invitations = await prisma.team_invitations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends team_invitationsUpdateManyArgs>(args: SelectSubset<T, team_invitationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_invitations and returns the data updated in the database.
     * @param {team_invitationsUpdateManyAndReturnArgs} args - Arguments to update many Team_invitations.
     * @example
     * // Update many Team_invitations
     * const team_invitations = await prisma.team_invitations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Team_invitations and only return the `id`
     * const team_invitationsWithIdOnly = await prisma.team_invitations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends team_invitationsUpdateManyAndReturnArgs>(args: SelectSubset<T, team_invitationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Team_invitations.
     * @param {team_invitationsUpsertArgs} args - Arguments to update or create a Team_invitations.
     * @example
     * // Update or create a Team_invitations
     * const team_invitations = await prisma.team_invitations.upsert({
     *   create: {
     *     // ... data to create a Team_invitations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team_invitations we want to update
     *   }
     * })
     */
    upsert<T extends team_invitationsUpsertArgs>(args: SelectSubset<T, team_invitationsUpsertArgs<ExtArgs>>): Prisma__team_invitationsClient<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Team_invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsCountArgs} args - Arguments to filter Team_invitations to count.
     * @example
     * // Count the number of Team_invitations
     * const count = await prisma.team_invitations.count({
     *   where: {
     *     // ... the filter for the Team_invitations we want to count
     *   }
     * })
    **/
    count<T extends team_invitationsCountArgs>(
      args?: Subset<T, team_invitationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Team_invitationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team_invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_invitationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Team_invitationsAggregateArgs>(args: Subset<T, Team_invitationsAggregateArgs>): Prisma.PrismaPromise<GetTeam_invitationsAggregateType<T>>

    /**
     * Group by Team_invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_invitationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends team_invitationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: team_invitationsGroupByArgs['orderBy'] }
        : { orderBy?: team_invitationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, team_invitationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeam_invitationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the team_invitations model
   */
  readonly fields: team_invitationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for team_invitations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__team_invitationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    teams<T extends teamsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, teamsDefaultArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the team_invitations model
   */
  interface team_invitationsFieldRefs {
    readonly id: FieldRef<"team_invitations", 'Int'>
    readonly token: FieldRef<"team_invitations", 'String'>
    readonly team_id: FieldRef<"team_invitations", 'Int'>
    readonly inviter_id: FieldRef<"team_invitations", 'Int'>
    readonly invitee_email: FieldRef<"team_invitations", 'String'>
    readonly status: FieldRef<"team_invitations", 'invitation_status'>
    readonly created_at: FieldRef<"team_invitations", 'DateTime'>
    readonly expires_at: FieldRef<"team_invitations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * team_invitations findUnique
   */
  export type team_invitationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter, which team_invitations to fetch.
     */
    where: team_invitationsWhereUniqueInput
  }

  /**
   * team_invitations findUniqueOrThrow
   */
  export type team_invitationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter, which team_invitations to fetch.
     */
    where: team_invitationsWhereUniqueInput
  }

  /**
   * team_invitations findFirst
   */
  export type team_invitationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter, which team_invitations to fetch.
     */
    where?: team_invitationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_invitations to fetch.
     */
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_invitations.
     */
    cursor?: team_invitationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_invitations.
     */
    distinct?: Team_invitationsScalarFieldEnum | Team_invitationsScalarFieldEnum[]
  }

  /**
   * team_invitations findFirstOrThrow
   */
  export type team_invitationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter, which team_invitations to fetch.
     */
    where?: team_invitationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_invitations to fetch.
     */
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_invitations.
     */
    cursor?: team_invitationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_invitations.
     */
    distinct?: Team_invitationsScalarFieldEnum | Team_invitationsScalarFieldEnum[]
  }

  /**
   * team_invitations findMany
   */
  export type team_invitationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter, which team_invitations to fetch.
     */
    where?: team_invitationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_invitations to fetch.
     */
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing team_invitations.
     */
    cursor?: team_invitationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_invitations.
     */
    skip?: number
    distinct?: Team_invitationsScalarFieldEnum | Team_invitationsScalarFieldEnum[]
  }

  /**
   * team_invitations create
   */
  export type team_invitationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * The data needed to create a team_invitations.
     */
    data: XOR<team_invitationsCreateInput, team_invitationsUncheckedCreateInput>
  }

  /**
   * team_invitations createMany
   */
  export type team_invitationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many team_invitations.
     */
    data: team_invitationsCreateManyInput | team_invitationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team_invitations createManyAndReturn
   */
  export type team_invitationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * The data used to create many team_invitations.
     */
    data: team_invitationsCreateManyInput | team_invitationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_invitations update
   */
  export type team_invitationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * The data needed to update a team_invitations.
     */
    data: XOR<team_invitationsUpdateInput, team_invitationsUncheckedUpdateInput>
    /**
     * Choose, which team_invitations to update.
     */
    where: team_invitationsWhereUniqueInput
  }

  /**
   * team_invitations updateMany
   */
  export type team_invitationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update team_invitations.
     */
    data: XOR<team_invitationsUpdateManyMutationInput, team_invitationsUncheckedUpdateManyInput>
    /**
     * Filter which team_invitations to update
     */
    where?: team_invitationsWhereInput
    /**
     * Limit how many team_invitations to update.
     */
    limit?: number
  }

  /**
   * team_invitations updateManyAndReturn
   */
  export type team_invitationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * The data used to update team_invitations.
     */
    data: XOR<team_invitationsUpdateManyMutationInput, team_invitationsUncheckedUpdateManyInput>
    /**
     * Filter which team_invitations to update
     */
    where?: team_invitationsWhereInput
    /**
     * Limit how many team_invitations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_invitations upsert
   */
  export type team_invitationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * The filter to search for the team_invitations to update in case it exists.
     */
    where: team_invitationsWhereUniqueInput
    /**
     * In case the team_invitations found by the `where` argument doesn't exist, create a new team_invitations with this data.
     */
    create: XOR<team_invitationsCreateInput, team_invitationsUncheckedCreateInput>
    /**
     * In case the team_invitations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<team_invitationsUpdateInput, team_invitationsUncheckedUpdateInput>
  }

  /**
   * team_invitations delete
   */
  export type team_invitationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    /**
     * Filter which team_invitations to delete.
     */
    where: team_invitationsWhereUniqueInput
  }

  /**
   * team_invitations deleteMany
   */
  export type team_invitationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_invitations to delete
     */
    where?: team_invitationsWhereInput
    /**
     * Limit how many team_invitations to delete.
     */
    limit?: number
  }

  /**
   * team_invitations without action
   */
  export type team_invitationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
  }


  /**
   * Model team_members
   */

  export type AggregateTeam_members = {
    _count: Team_membersCountAggregateOutputType | null
    _avg: Team_membersAvgAggregateOutputType | null
    _sum: Team_membersSumAggregateOutputType | null
    _min: Team_membersMinAggregateOutputType | null
    _max: Team_membersMaxAggregateOutputType | null
  }

  export type Team_membersAvgAggregateOutputType = {
    team_id: number | null
    user_id: number | null
  }

  export type Team_membersSumAggregateOutputType = {
    team_id: number | null
    user_id: number | null
  }

  export type Team_membersMinAggregateOutputType = {
    team_id: number | null
    user_id: number | null
    role: string | null
    joined_at: Date | null
  }

  export type Team_membersMaxAggregateOutputType = {
    team_id: number | null
    user_id: number | null
    role: string | null
    joined_at: Date | null
  }

  export type Team_membersCountAggregateOutputType = {
    team_id: number
    user_id: number
    role: number
    joined_at: number
    _all: number
  }


  export type Team_membersAvgAggregateInputType = {
    team_id?: true
    user_id?: true
  }

  export type Team_membersSumAggregateInputType = {
    team_id?: true
    user_id?: true
  }

  export type Team_membersMinAggregateInputType = {
    team_id?: true
    user_id?: true
    role?: true
    joined_at?: true
  }

  export type Team_membersMaxAggregateInputType = {
    team_id?: true
    user_id?: true
    role?: true
    joined_at?: true
  }

  export type Team_membersCountAggregateInputType = {
    team_id?: true
    user_id?: true
    role?: true
    joined_at?: true
    _all?: true
  }

  export type Team_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_members to aggregate.
     */
    where?: team_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: team_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned team_members
    **/
    _count?: true | Team_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Team_membersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Team_membersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Team_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Team_membersMaxAggregateInputType
  }

  export type GetTeam_membersAggregateType<T extends Team_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam_members[P]>
      : GetScalarType<T[P], AggregateTeam_members[P]>
  }




  export type team_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_membersWhereInput
    orderBy?: team_membersOrderByWithAggregationInput | team_membersOrderByWithAggregationInput[]
    by: Team_membersScalarFieldEnum[] | Team_membersScalarFieldEnum
    having?: team_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Team_membersCountAggregateInputType | true
    _avg?: Team_membersAvgAggregateInputType
    _sum?: Team_membersSumAggregateInputType
    _min?: Team_membersMinAggregateInputType
    _max?: Team_membersMaxAggregateInputType
  }

  export type Team_membersGroupByOutputType = {
    team_id: number
    user_id: number
    role: string | null
    joined_at: Date | null
    _count: Team_membersCountAggregateOutputType | null
    _avg: Team_membersAvgAggregateOutputType | null
    _sum: Team_membersSumAggregateOutputType | null
    _min: Team_membersMinAggregateOutputType | null
    _max: Team_membersMaxAggregateOutputType | null
  }

  type GetTeam_membersGroupByPayload<T extends team_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Team_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Team_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Team_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Team_membersGroupByOutputType[P]>
        }
      >
    >


  export type team_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    team_id?: boolean
    user_id?: boolean
    role?: boolean
    joined_at?: boolean
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_members"]>

  export type team_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    team_id?: boolean
    user_id?: boolean
    role?: boolean
    joined_at?: boolean
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_members"]>

  export type team_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    team_id?: boolean
    user_id?: boolean
    role?: boolean
    joined_at?: boolean
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_members"]>

  export type team_membersSelectScalar = {
    team_id?: boolean
    user_id?: boolean
    role?: boolean
    joined_at?: boolean
  }

  export type team_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"team_id" | "user_id" | "role" | "joined_at", ExtArgs["result"]["team_members"]>
  export type team_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type team_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type team_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $team_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "team_members"
    objects: {
      teams: Prisma.$teamsPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      team_id: number
      user_id: number
      role: string | null
      joined_at: Date | null
    }, ExtArgs["result"]["team_members"]>
    composites: {}
  }

  type team_membersGetPayload<S extends boolean | null | undefined | team_membersDefaultArgs> = $Result.GetResult<Prisma.$team_membersPayload, S>

  type team_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<team_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Team_membersCountAggregateInputType | true
    }

  export interface team_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['team_members'], meta: { name: 'team_members' } }
    /**
     * Find zero or one Team_members that matches the filter.
     * @param {team_membersFindUniqueArgs} args - Arguments to find a Team_members
     * @example
     * // Get one Team_members
     * const team_members = await prisma.team_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends team_membersFindUniqueArgs>(args: SelectSubset<T, team_membersFindUniqueArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Team_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {team_membersFindUniqueOrThrowArgs} args - Arguments to find a Team_members
     * @example
     * // Get one Team_members
     * const team_members = await prisma.team_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends team_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, team_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersFindFirstArgs} args - Arguments to find a Team_members
     * @example
     * // Get one Team_members
     * const team_members = await prisma.team_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends team_membersFindFirstArgs>(args?: SelectSubset<T, team_membersFindFirstArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersFindFirstOrThrowArgs} args - Arguments to find a Team_members
     * @example
     * // Get one Team_members
     * const team_members = await prisma.team_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends team_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, team_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Team_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Team_members
     * const team_members = await prisma.team_members.findMany()
     * 
     * // Get first 10 Team_members
     * const team_members = await prisma.team_members.findMany({ take: 10 })
     * 
     * // Only select the `team_id`
     * const team_membersWithTeam_idOnly = await prisma.team_members.findMany({ select: { team_id: true } })
     * 
     */
    findMany<T extends team_membersFindManyArgs>(args?: SelectSubset<T, team_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Team_members.
     * @param {team_membersCreateArgs} args - Arguments to create a Team_members.
     * @example
     * // Create one Team_members
     * const Team_members = await prisma.team_members.create({
     *   data: {
     *     // ... data to create a Team_members
     *   }
     * })
     * 
     */
    create<T extends team_membersCreateArgs>(args: SelectSubset<T, team_membersCreateArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Team_members.
     * @param {team_membersCreateManyArgs} args - Arguments to create many Team_members.
     * @example
     * // Create many Team_members
     * const team_members = await prisma.team_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends team_membersCreateManyArgs>(args?: SelectSubset<T, team_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Team_members and returns the data saved in the database.
     * @param {team_membersCreateManyAndReturnArgs} args - Arguments to create many Team_members.
     * @example
     * // Create many Team_members
     * const team_members = await prisma.team_members.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Team_members and only return the `team_id`
     * const team_membersWithTeam_idOnly = await prisma.team_members.createManyAndReturn({
     *   select: { team_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends team_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, team_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Team_members.
     * @param {team_membersDeleteArgs} args - Arguments to delete one Team_members.
     * @example
     * // Delete one Team_members
     * const Team_members = await prisma.team_members.delete({
     *   where: {
     *     // ... filter to delete one Team_members
     *   }
     * })
     * 
     */
    delete<T extends team_membersDeleteArgs>(args: SelectSubset<T, team_membersDeleteArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Team_members.
     * @param {team_membersUpdateArgs} args - Arguments to update one Team_members.
     * @example
     * // Update one Team_members
     * const team_members = await prisma.team_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends team_membersUpdateArgs>(args: SelectSubset<T, team_membersUpdateArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Team_members.
     * @param {team_membersDeleteManyArgs} args - Arguments to filter Team_members to delete.
     * @example
     * // Delete a few Team_members
     * const { count } = await prisma.team_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends team_membersDeleteManyArgs>(args?: SelectSubset<T, team_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Team_members
     * const team_members = await prisma.team_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends team_membersUpdateManyArgs>(args: SelectSubset<T, team_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_members and returns the data updated in the database.
     * @param {team_membersUpdateManyAndReturnArgs} args - Arguments to update many Team_members.
     * @example
     * // Update many Team_members
     * const team_members = await prisma.team_members.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Team_members and only return the `team_id`
     * const team_membersWithTeam_idOnly = await prisma.team_members.updateManyAndReturn({
     *   select: { team_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends team_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, team_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Team_members.
     * @param {team_membersUpsertArgs} args - Arguments to update or create a Team_members.
     * @example
     * // Update or create a Team_members
     * const team_members = await prisma.team_members.upsert({
     *   create: {
     *     // ... data to create a Team_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team_members we want to update
     *   }
     * })
     */
    upsert<T extends team_membersUpsertArgs>(args: SelectSubset<T, team_membersUpsertArgs<ExtArgs>>): Prisma__team_membersClient<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersCountArgs} args - Arguments to filter Team_members to count.
     * @example
     * // Count the number of Team_members
     * const count = await prisma.team_members.count({
     *   where: {
     *     // ... the filter for the Team_members we want to count
     *   }
     * })
    **/
    count<T extends team_membersCountArgs>(
      args?: Subset<T, team_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Team_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Team_membersAggregateArgs>(args: Subset<T, Team_membersAggregateArgs>): Prisma.PrismaPromise<GetTeam_membersAggregateType<T>>

    /**
     * Group by Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends team_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: team_membersGroupByArgs['orderBy'] }
        : { orderBy?: team_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, team_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeam_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the team_members model
   */
  readonly fields: team_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for team_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__team_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    teams<T extends teamsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, teamsDefaultArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the team_members model
   */
  interface team_membersFieldRefs {
    readonly team_id: FieldRef<"team_members", 'Int'>
    readonly user_id: FieldRef<"team_members", 'Int'>
    readonly role: FieldRef<"team_members", 'String'>
    readonly joined_at: FieldRef<"team_members", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * team_members findUnique
   */
  export type team_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where: team_membersWhereUniqueInput
  }

  /**
   * team_members findUniqueOrThrow
   */
  export type team_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where: team_membersWhereUniqueInput
  }

  /**
   * team_members findFirst
   */
  export type team_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where?: team_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_members.
     */
    cursor?: team_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_members.
     */
    distinct?: Team_membersScalarFieldEnum | Team_membersScalarFieldEnum[]
  }

  /**
   * team_members findFirstOrThrow
   */
  export type team_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where?: team_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_members.
     */
    cursor?: team_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_members.
     */
    distinct?: Team_membersScalarFieldEnum | Team_membersScalarFieldEnum[]
  }

  /**
   * team_members findMany
   */
  export type team_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where?: team_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing team_members.
     */
    cursor?: team_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    distinct?: Team_membersScalarFieldEnum | Team_membersScalarFieldEnum[]
  }

  /**
   * team_members create
   */
  export type team_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a team_members.
     */
    data: XOR<team_membersCreateInput, team_membersUncheckedCreateInput>
  }

  /**
   * team_members createMany
   */
  export type team_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many team_members.
     */
    data: team_membersCreateManyInput | team_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team_members createManyAndReturn
   */
  export type team_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * The data used to create many team_members.
     */
    data: team_membersCreateManyInput | team_membersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_members update
   */
  export type team_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a team_members.
     */
    data: XOR<team_membersUpdateInput, team_membersUncheckedUpdateInput>
    /**
     * Choose, which team_members to update.
     */
    where: team_membersWhereUniqueInput
  }

  /**
   * team_members updateMany
   */
  export type team_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update team_members.
     */
    data: XOR<team_membersUpdateManyMutationInput, team_membersUncheckedUpdateManyInput>
    /**
     * Filter which team_members to update
     */
    where?: team_membersWhereInput
    /**
     * Limit how many team_members to update.
     */
    limit?: number
  }

  /**
   * team_members updateManyAndReturn
   */
  export type team_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * The data used to update team_members.
     */
    data: XOR<team_membersUpdateManyMutationInput, team_membersUncheckedUpdateManyInput>
    /**
     * Filter which team_members to update
     */
    where?: team_membersWhereInput
    /**
     * Limit how many team_members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_members upsert
   */
  export type team_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the team_members to update in case it exists.
     */
    where: team_membersWhereUniqueInput
    /**
     * In case the team_members found by the `where` argument doesn't exist, create a new team_members with this data.
     */
    create: XOR<team_membersCreateInput, team_membersUncheckedCreateInput>
    /**
     * In case the team_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<team_membersUpdateInput, team_membersUncheckedUpdateInput>
  }

  /**
   * team_members delete
   */
  export type team_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    /**
     * Filter which team_members to delete.
     */
    where: team_membersWhereUniqueInput
  }

  /**
   * team_members deleteMany
   */
  export type team_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_members to delete
     */
    where?: team_membersWhereInput
    /**
     * Limit how many team_members to delete.
     */
    limit?: number
  }

  /**
   * team_members without action
   */
  export type team_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
  }


  /**
   * Model teams
   */

  export type AggregateTeams = {
    _count: TeamsCountAggregateOutputType | null
    _avg: TeamsAvgAggregateOutputType | null
    _sum: TeamsSumAggregateOutputType | null
    _min: TeamsMinAggregateOutputType | null
    _max: TeamsMaxAggregateOutputType | null
  }

  export type TeamsAvgAggregateOutputType = {
    id: number | null
    owner_id: number | null
    budget: Decimal | null
    income_goal: Decimal | null
  }

  export type TeamsSumAggregateOutputType = {
    id: number | null
    owner_id: number | null
    budget: Decimal | null
    income_goal: Decimal | null
  }

  export type TeamsMinAggregateOutputType = {
    id: number | null
    team_name: string | null
    owner_id: number | null
    currency: string | null
    budget: Decimal | null
    income_goal: Decimal | null
    allow_member_view_report: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TeamsMaxAggregateOutputType = {
    id: number | null
    team_name: string | null
    owner_id: number | null
    currency: string | null
    budget: Decimal | null
    income_goal: Decimal | null
    allow_member_view_report: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TeamsCountAggregateOutputType = {
    id: number
    team_name: number
    owner_id: number
    currency: number
    budget: number
    income_goal: number
    allow_member_view_report: number
    categories: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TeamsAvgAggregateInputType = {
    id?: true
    owner_id?: true
    budget?: true
    income_goal?: true
  }

  export type TeamsSumAggregateInputType = {
    id?: true
    owner_id?: true
    budget?: true
    income_goal?: true
  }

  export type TeamsMinAggregateInputType = {
    id?: true
    team_name?: true
    owner_id?: true
    currency?: true
    budget?: true
    income_goal?: true
    allow_member_view_report?: true
    created_at?: true
    updated_at?: true
  }

  export type TeamsMaxAggregateInputType = {
    id?: true
    team_name?: true
    owner_id?: true
    currency?: true
    budget?: true
    income_goal?: true
    allow_member_view_report?: true
    created_at?: true
    updated_at?: true
  }

  export type TeamsCountAggregateInputType = {
    id?: true
    team_name?: true
    owner_id?: true
    currency?: true
    budget?: true
    income_goal?: true
    allow_member_view_report?: true
    categories?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TeamsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which teams to aggregate.
     */
    where?: teamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamsOrderByWithRelationInput | teamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: teamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned teams
    **/
    _count?: true | TeamsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TeamsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TeamsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TeamsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TeamsMaxAggregateInputType
  }

  export type GetTeamsAggregateType<T extends TeamsAggregateArgs> = {
        [P in keyof T & keyof AggregateTeams]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeams[P]>
      : GetScalarType<T[P], AggregateTeams[P]>
  }




  export type teamsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: teamsWhereInput
    orderBy?: teamsOrderByWithAggregationInput | teamsOrderByWithAggregationInput[]
    by: TeamsScalarFieldEnum[] | TeamsScalarFieldEnum
    having?: teamsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TeamsCountAggregateInputType | true
    _avg?: TeamsAvgAggregateInputType
    _sum?: TeamsSumAggregateInputType
    _min?: TeamsMinAggregateInputType
    _max?: TeamsMaxAggregateInputType
  }

  export type TeamsGroupByOutputType = {
    id: number
    team_name: string
    owner_id: number
    currency: string
    budget: Decimal | null
    income_goal: Decimal | null
    allow_member_view_report: boolean | null
    categories: JsonValue
    created_at: Date | null
    updated_at: Date | null
    _count: TeamsCountAggregateOutputType | null
    _avg: TeamsAvgAggregateOutputType | null
    _sum: TeamsSumAggregateOutputType | null
    _min: TeamsMinAggregateOutputType | null
    _max: TeamsMaxAggregateOutputType | null
  }

  type GetTeamsGroupByPayload<T extends teamsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TeamsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TeamsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TeamsGroupByOutputType[P]>
            : GetScalarType<T[P], TeamsGroupByOutputType[P]>
        }
      >
    >


  export type teamsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    owner_id?: boolean
    currency?: boolean
    budget?: boolean
    income_goal?: boolean
    allow_member_view_report?: boolean
    categories?: boolean
    created_at?: boolean
    updated_at?: boolean
    notifications?: boolean | teams$notificationsArgs<ExtArgs>
    team_invitations?: boolean | teams$team_invitationsArgs<ExtArgs>
    team_members?: boolean | teams$team_membersArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | teams$transactionsArgs<ExtArgs>
    _count?: boolean | TeamsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["teams"]>

  export type teamsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    owner_id?: boolean
    currency?: boolean
    budget?: boolean
    income_goal?: boolean
    allow_member_view_report?: boolean
    categories?: boolean
    created_at?: boolean
    updated_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["teams"]>

  export type teamsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    owner_id?: boolean
    currency?: boolean
    budget?: boolean
    income_goal?: boolean
    allow_member_view_report?: boolean
    categories?: boolean
    created_at?: boolean
    updated_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["teams"]>

  export type teamsSelectScalar = {
    id?: boolean
    team_name?: boolean
    owner_id?: boolean
    currency?: boolean
    budget?: boolean
    income_goal?: boolean
    allow_member_view_report?: boolean
    categories?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type teamsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "team_name" | "owner_id" | "currency" | "budget" | "income_goal" | "allow_member_view_report" | "categories" | "created_at" | "updated_at", ExtArgs["result"]["teams"]>
  export type teamsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifications?: boolean | teams$notificationsArgs<ExtArgs>
    team_invitations?: boolean | teams$team_invitationsArgs<ExtArgs>
    team_members?: boolean | teams$team_membersArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | teams$transactionsArgs<ExtArgs>
    _count?: boolean | TeamsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type teamsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type teamsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $teamsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "teams"
    objects: {
      notifications: Prisma.$notificationsPayload<ExtArgs>[]
      team_invitations: Prisma.$team_invitationsPayload<ExtArgs>[]
      team_members: Prisma.$team_membersPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>
      transactions: Prisma.$transactionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      team_name: string
      owner_id: number
      currency: string
      budget: Prisma.Decimal | null
      income_goal: Prisma.Decimal | null
      allow_member_view_report: boolean | null
      categories: Prisma.JsonValue
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["teams"]>
    composites: {}
  }

  type teamsGetPayload<S extends boolean | null | undefined | teamsDefaultArgs> = $Result.GetResult<Prisma.$teamsPayload, S>

  type teamsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<teamsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TeamsCountAggregateInputType | true
    }

  export interface teamsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['teams'], meta: { name: 'teams' } }
    /**
     * Find zero or one Teams that matches the filter.
     * @param {teamsFindUniqueArgs} args - Arguments to find a Teams
     * @example
     * // Get one Teams
     * const teams = await prisma.teams.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends teamsFindUniqueArgs>(args: SelectSubset<T, teamsFindUniqueArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Teams that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {teamsFindUniqueOrThrowArgs} args - Arguments to find a Teams
     * @example
     * // Get one Teams
     * const teams = await prisma.teams.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends teamsFindUniqueOrThrowArgs>(args: SelectSubset<T, teamsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Teams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsFindFirstArgs} args - Arguments to find a Teams
     * @example
     * // Get one Teams
     * const teams = await prisma.teams.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends teamsFindFirstArgs>(args?: SelectSubset<T, teamsFindFirstArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Teams that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsFindFirstOrThrowArgs} args - Arguments to find a Teams
     * @example
     * // Get one Teams
     * const teams = await prisma.teams.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends teamsFindFirstOrThrowArgs>(args?: SelectSubset<T, teamsFindFirstOrThrowArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Teams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Teams
     * const teams = await prisma.teams.findMany()
     * 
     * // Get first 10 Teams
     * const teams = await prisma.teams.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const teamsWithIdOnly = await prisma.teams.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends teamsFindManyArgs>(args?: SelectSubset<T, teamsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Teams.
     * @param {teamsCreateArgs} args - Arguments to create a Teams.
     * @example
     * // Create one Teams
     * const Teams = await prisma.teams.create({
     *   data: {
     *     // ... data to create a Teams
     *   }
     * })
     * 
     */
    create<T extends teamsCreateArgs>(args: SelectSubset<T, teamsCreateArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Teams.
     * @param {teamsCreateManyArgs} args - Arguments to create many Teams.
     * @example
     * // Create many Teams
     * const teams = await prisma.teams.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends teamsCreateManyArgs>(args?: SelectSubset<T, teamsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Teams and returns the data saved in the database.
     * @param {teamsCreateManyAndReturnArgs} args - Arguments to create many Teams.
     * @example
     * // Create many Teams
     * const teams = await prisma.teams.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Teams and only return the `id`
     * const teamsWithIdOnly = await prisma.teams.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends teamsCreateManyAndReturnArgs>(args?: SelectSubset<T, teamsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Teams.
     * @param {teamsDeleteArgs} args - Arguments to delete one Teams.
     * @example
     * // Delete one Teams
     * const Teams = await prisma.teams.delete({
     *   where: {
     *     // ... filter to delete one Teams
     *   }
     * })
     * 
     */
    delete<T extends teamsDeleteArgs>(args: SelectSubset<T, teamsDeleteArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Teams.
     * @param {teamsUpdateArgs} args - Arguments to update one Teams.
     * @example
     * // Update one Teams
     * const teams = await prisma.teams.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends teamsUpdateArgs>(args: SelectSubset<T, teamsUpdateArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Teams.
     * @param {teamsDeleteManyArgs} args - Arguments to filter Teams to delete.
     * @example
     * // Delete a few Teams
     * const { count } = await prisma.teams.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends teamsDeleteManyArgs>(args?: SelectSubset<T, teamsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Teams
     * const teams = await prisma.teams.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends teamsUpdateManyArgs>(args: SelectSubset<T, teamsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Teams and returns the data updated in the database.
     * @param {teamsUpdateManyAndReturnArgs} args - Arguments to update many Teams.
     * @example
     * // Update many Teams
     * const teams = await prisma.teams.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Teams and only return the `id`
     * const teamsWithIdOnly = await prisma.teams.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends teamsUpdateManyAndReturnArgs>(args: SelectSubset<T, teamsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Teams.
     * @param {teamsUpsertArgs} args - Arguments to update or create a Teams.
     * @example
     * // Update or create a Teams
     * const teams = await prisma.teams.upsert({
     *   create: {
     *     // ... data to create a Teams
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Teams we want to update
     *   }
     * })
     */
    upsert<T extends teamsUpsertArgs>(args: SelectSubset<T, teamsUpsertArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsCountArgs} args - Arguments to filter Teams to count.
     * @example
     * // Count the number of Teams
     * const count = await prisma.teams.count({
     *   where: {
     *     // ... the filter for the Teams we want to count
     *   }
     * })
    **/
    count<T extends teamsCountArgs>(
      args?: Subset<T, teamsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TeamsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TeamsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TeamsAggregateArgs>(args: Subset<T, TeamsAggregateArgs>): Prisma.PrismaPromise<GetTeamsAggregateType<T>>

    /**
     * Group by Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends teamsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: teamsGroupByArgs['orderBy'] }
        : { orderBy?: teamsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, teamsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeamsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the teams model
   */
  readonly fields: teamsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for teams.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__teamsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notifications<T extends teams$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, teams$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_invitations<T extends teams$team_invitationsArgs<ExtArgs> = {}>(args?: Subset<T, teams$team_invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_invitationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_members<T extends teams$team_membersArgs<ExtArgs> = {}>(args?: Subset<T, teams$team_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transactions<T extends teams$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, teams$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the teams model
   */
  interface teamsFieldRefs {
    readonly id: FieldRef<"teams", 'Int'>
    readonly team_name: FieldRef<"teams", 'String'>
    readonly owner_id: FieldRef<"teams", 'Int'>
    readonly currency: FieldRef<"teams", 'String'>
    readonly budget: FieldRef<"teams", 'Decimal'>
    readonly income_goal: FieldRef<"teams", 'Decimal'>
    readonly allow_member_view_report: FieldRef<"teams", 'Boolean'>
    readonly categories: FieldRef<"teams", 'Json'>
    readonly created_at: FieldRef<"teams", 'DateTime'>
    readonly updated_at: FieldRef<"teams", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * teams findUnique
   */
  export type teamsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where: teamsWhereUniqueInput
  }

  /**
   * teams findUniqueOrThrow
   */
  export type teamsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where: teamsWhereUniqueInput
  }

  /**
   * teams findFirst
   */
  export type teamsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where?: teamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamsOrderByWithRelationInput | teamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teams.
     */
    cursor?: teamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teams.
     */
    distinct?: TeamsScalarFieldEnum | TeamsScalarFieldEnum[]
  }

  /**
   * teams findFirstOrThrow
   */
  export type teamsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where?: teamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamsOrderByWithRelationInput | teamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teams.
     */
    cursor?: teamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teams.
     */
    distinct?: TeamsScalarFieldEnum | TeamsScalarFieldEnum[]
  }

  /**
   * teams findMany
   */
  export type teamsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where?: teamsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamsOrderByWithRelationInput | teamsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing teams.
     */
    cursor?: teamsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    distinct?: TeamsScalarFieldEnum | TeamsScalarFieldEnum[]
  }

  /**
   * teams create
   */
  export type teamsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * The data needed to create a teams.
     */
    data: XOR<teamsCreateInput, teamsUncheckedCreateInput>
  }

  /**
   * teams createMany
   */
  export type teamsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many teams.
     */
    data: teamsCreateManyInput | teamsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * teams createManyAndReturn
   */
  export type teamsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * The data used to create many teams.
     */
    data: teamsCreateManyInput | teamsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * teams update
   */
  export type teamsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * The data needed to update a teams.
     */
    data: XOR<teamsUpdateInput, teamsUncheckedUpdateInput>
    /**
     * Choose, which teams to update.
     */
    where: teamsWhereUniqueInput
  }

  /**
   * teams updateMany
   */
  export type teamsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update teams.
     */
    data: XOR<teamsUpdateManyMutationInput, teamsUncheckedUpdateManyInput>
    /**
     * Filter which teams to update
     */
    where?: teamsWhereInput
    /**
     * Limit how many teams to update.
     */
    limit?: number
  }

  /**
   * teams updateManyAndReturn
   */
  export type teamsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * The data used to update teams.
     */
    data: XOR<teamsUpdateManyMutationInput, teamsUncheckedUpdateManyInput>
    /**
     * Filter which teams to update
     */
    where?: teamsWhereInput
    /**
     * Limit how many teams to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * teams upsert
   */
  export type teamsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * The filter to search for the teams to update in case it exists.
     */
    where: teamsWhereUniqueInput
    /**
     * In case the teams found by the `where` argument doesn't exist, create a new teams with this data.
     */
    create: XOR<teamsCreateInput, teamsUncheckedCreateInput>
    /**
     * In case the teams was found with the provided `where` argument, update it with this data.
     */
    update: XOR<teamsUpdateInput, teamsUncheckedUpdateInput>
  }

  /**
   * teams delete
   */
  export type teamsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
    /**
     * Filter which teams to delete.
     */
    where: teamsWhereUniqueInput
  }

  /**
   * teams deleteMany
   */
  export type teamsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which teams to delete
     */
    where?: teamsWhereInput
    /**
     * Limit how many teams to delete.
     */
    limit?: number
  }

  /**
   * teams.notifications
   */
  export type teams$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    cursor?: notificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * teams.team_invitations
   */
  export type teams$team_invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_invitations
     */
    select?: team_invitationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_invitations
     */
    omit?: team_invitationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_invitationsInclude<ExtArgs> | null
    where?: team_invitationsWhereInput
    orderBy?: team_invitationsOrderByWithRelationInput | team_invitationsOrderByWithRelationInput[]
    cursor?: team_invitationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_invitationsScalarFieldEnum | Team_invitationsScalarFieldEnum[]
  }

  /**
   * teams.team_members
   */
  export type teams$team_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_members
     */
    select?: team_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_members
     */
    omit?: team_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_membersInclude<ExtArgs> | null
    where?: team_membersWhereInput
    orderBy?: team_membersOrderByWithRelationInput | team_membersOrderByWithRelationInput[]
    cursor?: team_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_membersScalarFieldEnum | Team_membersScalarFieldEnum[]
  }

  /**
   * teams.transactions
   */
  export type teams$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    cursor?: transactionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * teams without action
   */
  export type teamsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the teams
     */
    select?: teamsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the teams
     */
    omit?: teamsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamsInclude<ExtArgs> | null
  }


  /**
   * Model transactions
   */

  export type AggregateTransactions = {
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  export type TransactionsAvgAggregateOutputType = {
    id: number | null
    team_id: number | null
    user_id: number | null
    amount: Decimal | null
  }

  export type TransactionsSumAggregateOutputType = {
    id: number | null
    team_id: number | null
    user_id: number | null
    amount: Decimal | null
  }

  export type TransactionsMinAggregateOutputType = {
    id: number | null
    team_id: number | null
    user_id: number | null
    amount: Decimal | null
    type: $Enums.transaction_type | null
    category_name: string | null
    category_icon: string | null
    description: string | null
    transaction_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionsMaxAggregateOutputType = {
    id: number | null
    team_id: number | null
    user_id: number | null
    amount: Decimal | null
    type: $Enums.transaction_type | null
    category_name: string | null
    category_icon: string | null
    description: string | null
    transaction_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TransactionsCountAggregateOutputType = {
    id: number
    team_id: number
    user_id: number
    amount: number
    type: number
    category_name: number
    category_icon: number
    description: number
    transaction_date: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TransactionsAvgAggregateInputType = {
    id?: true
    team_id?: true
    user_id?: true
    amount?: true
  }

  export type TransactionsSumAggregateInputType = {
    id?: true
    team_id?: true
    user_id?: true
    amount?: true
  }

  export type TransactionsMinAggregateInputType = {
    id?: true
    team_id?: true
    user_id?: true
    amount?: true
    type?: true
    category_name?: true
    category_icon?: true
    description?: true
    transaction_date?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionsMaxAggregateInputType = {
    id?: true
    team_id?: true
    user_id?: true
    amount?: true
    type?: true
    category_name?: true
    category_icon?: true
    description?: true
    transaction_date?: true
    created_at?: true
    updated_at?: true
  }

  export type TransactionsCountAggregateInputType = {
    id?: true
    team_id?: true
    user_id?: true
    amount?: true
    type?: true
    category_name?: true
    category_icon?: true
    description?: true
    transaction_date?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TransactionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transactions to aggregate.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transactions
    **/
    _count?: true | TransactionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionsMaxAggregateInputType
  }

  export type GetTransactionsAggregateType<T extends TransactionsAggregateArgs> = {
        [P in keyof T & keyof AggregateTransactions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransactions[P]>
      : GetScalarType<T[P], AggregateTransactions[P]>
  }




  export type transactionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transactionsWhereInput
    orderBy?: transactionsOrderByWithAggregationInput | transactionsOrderByWithAggregationInput[]
    by: TransactionsScalarFieldEnum[] | TransactionsScalarFieldEnum
    having?: transactionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionsCountAggregateInputType | true
    _avg?: TransactionsAvgAggregateInputType
    _sum?: TransactionsSumAggregateInputType
    _min?: TransactionsMinAggregateInputType
    _max?: TransactionsMaxAggregateInputType
  }

  export type TransactionsGroupByOutputType = {
    id: number
    team_id: number
    user_id: number
    amount: Decimal
    type: $Enums.transaction_type
    category_name: string | null
    category_icon: string | null
    description: string | null
    transaction_date: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: TransactionsCountAggregateOutputType | null
    _avg: TransactionsAvgAggregateOutputType | null
    _sum: TransactionsSumAggregateOutputType | null
    _min: TransactionsMinAggregateOutputType | null
    _max: TransactionsMaxAggregateOutputType | null
  }

  type GetTransactionsGroupByPayload<T extends transactionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionsGroupByOutputType[P]>
        }
      >
    >


  export type transactionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_id?: boolean
    user_id?: boolean
    amount?: boolean
    type?: boolean
    category_name?: boolean
    category_icon?: boolean
    description?: boolean
    transaction_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    change_requests?: boolean | transactions$change_requestsArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TransactionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_id?: boolean
    user_id?: boolean
    amount?: boolean
    type?: boolean
    category_name?: boolean
    category_icon?: boolean
    description?: boolean
    transaction_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_id?: boolean
    user_id?: boolean
    amount?: boolean
    type?: boolean
    category_name?: boolean
    category_icon?: boolean
    description?: boolean
    transaction_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transactions"]>

  export type transactionsSelectScalar = {
    id?: boolean
    team_id?: boolean
    user_id?: boolean
    amount?: boolean
    type?: boolean
    category_name?: boolean
    category_icon?: boolean
    description?: boolean
    transaction_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type transactionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "team_id" | "user_id" | "amount" | "type" | "category_name" | "category_icon" | "description" | "transaction_date" | "created_at" | "updated_at", ExtArgs["result"]["transactions"]>
  export type transactionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    change_requests?: boolean | transactions$change_requestsArgs<ExtArgs>
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TransactionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type transactionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type transactionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    teams?: boolean | teamsDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $transactionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transactions"
    objects: {
      change_requests: Prisma.$change_requestsPayload<ExtArgs>[]
      teams: Prisma.$teamsPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      team_id: number
      user_id: number
      amount: Prisma.Decimal
      type: $Enums.transaction_type
      category_name: string | null
      category_icon: string | null
      description: string | null
      transaction_date: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["transactions"]>
    composites: {}
  }

  type transactionsGetPayload<S extends boolean | null | undefined | transactionsDefaultArgs> = $Result.GetResult<Prisma.$transactionsPayload, S>

  type transactionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transactionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionsCountAggregateInputType | true
    }

  export interface transactionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transactions'], meta: { name: 'transactions' } }
    /**
     * Find zero or one Transactions that matches the filter.
     * @param {transactionsFindUniqueArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transactionsFindUniqueArgs>(args: SelectSubset<T, transactionsFindUniqueArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transactions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transactionsFindUniqueOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transactionsFindUniqueOrThrowArgs>(args: SelectSubset<T, transactionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindFirstArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transactionsFindFirstArgs>(args?: SelectSubset<T, transactionsFindFirstArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transactions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindFirstOrThrowArgs} args - Arguments to find a Transactions
     * @example
     * // Get one Transactions
     * const transactions = await prisma.transactions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transactionsFindFirstOrThrowArgs>(args?: SelectSubset<T, transactionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transactions.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transactions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionsWithIdOnly = await prisma.transactions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transactionsFindManyArgs>(args?: SelectSubset<T, transactionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transactions.
     * @param {transactionsCreateArgs} args - Arguments to create a Transactions.
     * @example
     * // Create one Transactions
     * const Transactions = await prisma.transactions.create({
     *   data: {
     *     // ... data to create a Transactions
     *   }
     * })
     * 
     */
    create<T extends transactionsCreateArgs>(args: SelectSubset<T, transactionsCreateArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transactions.
     * @param {transactionsCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transactionsCreateManyArgs>(args?: SelectSubset<T, transactionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {transactionsCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transactions = await prisma.transactions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `id`
     * const transactionsWithIdOnly = await prisma.transactions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transactionsCreateManyAndReturnArgs>(args?: SelectSubset<T, transactionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transactions.
     * @param {transactionsDeleteArgs} args - Arguments to delete one Transactions.
     * @example
     * // Delete one Transactions
     * const Transactions = await prisma.transactions.delete({
     *   where: {
     *     // ... filter to delete one Transactions
     *   }
     * })
     * 
     */
    delete<T extends transactionsDeleteArgs>(args: SelectSubset<T, transactionsDeleteArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transactions.
     * @param {transactionsUpdateArgs} args - Arguments to update one Transactions.
     * @example
     * // Update one Transactions
     * const transactions = await prisma.transactions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transactionsUpdateArgs>(args: SelectSubset<T, transactionsUpdateArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transactions.
     * @param {transactionsDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transactions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transactionsDeleteManyArgs>(args?: SelectSubset<T, transactionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transactions = await prisma.transactions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transactionsUpdateManyArgs>(args: SelectSubset<T, transactionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions and returns the data updated in the database.
     * @param {transactionsUpdateManyAndReturnArgs} args - Arguments to update many Transactions.
     * @example
     * // Update many Transactions
     * const transactions = await prisma.transactions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transactions and only return the `id`
     * const transactionsWithIdOnly = await prisma.transactions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transactionsUpdateManyAndReturnArgs>(args: SelectSubset<T, transactionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transactions.
     * @param {transactionsUpsertArgs} args - Arguments to update or create a Transactions.
     * @example
     * // Update or create a Transactions
     * const transactions = await prisma.transactions.upsert({
     *   create: {
     *     // ... data to create a Transactions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transactions we want to update
     *   }
     * })
     */
    upsert<T extends transactionsUpsertArgs>(args: SelectSubset<T, transactionsUpsertArgs<ExtArgs>>): Prisma__transactionsClient<$Result.GetResult<Prisma.$transactionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transactions.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends transactionsCountArgs>(
      args?: Subset<T, transactionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionsAggregateArgs>(args: Subset<T, TransactionsAggregateArgs>): Prisma.PrismaPromise<GetTransactionsAggregateType<T>>

    /**
     * Group by Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transactionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transactionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transactionsGroupByArgs['orderBy'] }
        : { orderBy?: transactionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transactionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transactions model
   */
  readonly fields: transactionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transactions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transactionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    change_requests<T extends transactions$change_requestsArgs<ExtArgs> = {}>(args?: Subset<T, transactions$change_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$change_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    teams<T extends teamsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, teamsDefaultArgs<ExtArgs>>): Prisma__teamsClient<$Result.GetResult<Prisma.$teamsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transactions model
   */
  interface transactionsFieldRefs {
    readonly id: FieldRef<"transactions", 'Int'>
    readonly team_id: FieldRef<"transactions", 'Int'>
    readonly user_id: FieldRef<"transactions", 'Int'>
    readonly amount: FieldRef<"transactions", 'Decimal'>
    readonly type: FieldRef<"transactions", 'transaction_type'>
    readonly category_name: FieldRef<"transactions", 'String'>
    readonly category_icon: FieldRef<"transactions", 'String'>
    readonly description: FieldRef<"transactions", 'String'>
    readonly transaction_date: FieldRef<"transactions", 'DateTime'>
    readonly created_at: FieldRef<"transactions", 'DateTime'>
    readonly updated_at: FieldRef<"transactions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * transactions findUnique
   */
  export type transactionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions findUniqueOrThrow
   */
  export type transactionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions findFirst
   */
  export type transactionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions findFirstOrThrow
   */
  export type transactionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transactions.
     */
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions findMany
   */
  export type transactionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter, which transactions to fetch.
     */
    where?: transactionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transactions to fetch.
     */
    orderBy?: transactionsOrderByWithRelationInput | transactionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transactions.
     */
    cursor?: transactionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transactions.
     */
    skip?: number
    distinct?: TransactionsScalarFieldEnum | TransactionsScalarFieldEnum[]
  }

  /**
   * transactions create
   */
  export type transactionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The data needed to create a transactions.
     */
    data: XOR<transactionsCreateInput, transactionsUncheckedCreateInput>
  }

  /**
   * transactions createMany
   */
  export type transactionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transactions.
     */
    data: transactionsCreateManyInput | transactionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transactions createManyAndReturn
   */
  export type transactionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * The data used to create many transactions.
     */
    data: transactionsCreateManyInput | transactionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transactions update
   */
  export type transactionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The data needed to update a transactions.
     */
    data: XOR<transactionsUpdateInput, transactionsUncheckedUpdateInput>
    /**
     * Choose, which transactions to update.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions updateMany
   */
  export type transactionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transactions.
     */
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyInput>
    /**
     * Filter which transactions to update
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to update.
     */
    limit?: number
  }

  /**
   * transactions updateManyAndReturn
   */
  export type transactionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * The data used to update transactions.
     */
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyInput>
    /**
     * Filter which transactions to update
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transactions upsert
   */
  export type transactionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * The filter to search for the transactions to update in case it exists.
     */
    where: transactionsWhereUniqueInput
    /**
     * In case the transactions found by the `where` argument doesn't exist, create a new transactions with this data.
     */
    create: XOR<transactionsCreateInput, transactionsUncheckedCreateInput>
    /**
     * In case the transactions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transactionsUpdateInput, transactionsUncheckedUpdateInput>
  }

  /**
   * transactions delete
   */
  export type transactionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
    /**
     * Filter which transactions to delete.
     */
    where: transactionsWhereUniqueInput
  }

  /**
   * transactions deleteMany
   */
  export type transactionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transactions to delete
     */
    where?: transactionsWhereInput
    /**
     * Limit how many transactions to delete.
     */
    limit?: number
  }

  /**
   * transactions.change_requests
   */
  export type transactions$change_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the change_requests
     */
    select?: change_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the change_requests
     */
    omit?: change_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: change_requestsInclude<ExtArgs> | null
    where?: change_requestsWhereInput
    orderBy?: change_requestsOrderByWithRelationInput | change_requestsOrderByWithRelationInput[]
    cursor?: change_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Change_requestsScalarFieldEnum | Change_requestsScalarFieldEnum[]
  }

  /**
   * transactions without action
   */
  export type transactionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transactions
     */
    select?: transactionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transactions
     */
    omit?: transactionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transactionsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    passwordHash: 'passwordHash',
    gender: 'gender',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const Change_requestsScalarFieldEnum: {
    id: 'id',
    requester_id: 'requester_id',
    target_transaction_id: 'target_transaction_id',
    type: 'type',
    status: 'status',
    reason: 'reason',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Change_requestsScalarFieldEnum = (typeof Change_requestsScalarFieldEnum)[keyof typeof Change_requestsScalarFieldEnum]


  export const NotificationsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    team_id: 'team_id',
    type: 'type',
    message: 'message',
    is_read: 'is_read',
    related_resource_id: 'related_resource_id',
    created_at: 'created_at'
  };

  export type NotificationsScalarFieldEnum = (typeof NotificationsScalarFieldEnum)[keyof typeof NotificationsScalarFieldEnum]


  export const Team_invitationsScalarFieldEnum: {
    id: 'id',
    token: 'token',
    team_id: 'team_id',
    inviter_id: 'inviter_id',
    invitee_email: 'invitee_email',
    status: 'status',
    created_at: 'created_at',
    expires_at: 'expires_at'
  };

  export type Team_invitationsScalarFieldEnum = (typeof Team_invitationsScalarFieldEnum)[keyof typeof Team_invitationsScalarFieldEnum]


  export const Team_membersScalarFieldEnum: {
    team_id: 'team_id',
    user_id: 'user_id',
    role: 'role',
    joined_at: 'joined_at'
  };

  export type Team_membersScalarFieldEnum = (typeof Team_membersScalarFieldEnum)[keyof typeof Team_membersScalarFieldEnum]


  export const TeamsScalarFieldEnum: {
    id: 'id',
    team_name: 'team_name',
    owner_id: 'owner_id',
    currency: 'currency',
    budget: 'budget',
    income_goal: 'income_goal',
    allow_member_view_report: 'allow_member_view_report',
    categories: 'categories',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TeamsScalarFieldEnum = (typeof TeamsScalarFieldEnum)[keyof typeof TeamsScalarFieldEnum]


  export const TransactionsScalarFieldEnum: {
    id: 'id',
    team_id: 'team_id',
    user_id: 'user_id',
    amount: 'amount',
    type: 'type',
    category_name: 'category_name',
    category_icon: 'category_icon',
    description: 'description',
    transaction_date: 'transaction_date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TransactionsScalarFieldEnum = (typeof TransactionsScalarFieldEnum)[keyof typeof TransactionsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'change_request_status'
   */
  export type Enumchange_request_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'change_request_status'>
    


  /**
   * Reference to a field of type 'change_request_status[]'
   */
  export type ListEnumchange_request_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'change_request_status[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'invitation_status'
   */
  export type Enuminvitation_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'invitation_status'>
    


  /**
   * Reference to a field of type 'invitation_status[]'
   */
  export type ListEnuminvitation_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'invitation_status[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'transaction_type'
   */
  export type Enumtransaction_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_type'>
    


  /**
   * Reference to a field of type 'transaction_type[]'
   */
  export type ListEnumtransaction_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaction_type[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    gender?: StringNullableFilter<"User"> | string | null
    created_at?: DateTimeNullableFilter<"User"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"User"> | Date | string | null
    change_requests?: Change_requestsListRelationFilter
    notifications?: NotificationsListRelationFilter
    team_invitations?: Team_invitationsListRelationFilter
    team_members?: Team_membersListRelationFilter
    teams?: TeamsListRelationFilter
    transactions?: TransactionsListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    gender?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    change_requests?: change_requestsOrderByRelationAggregateInput
    notifications?: notificationsOrderByRelationAggregateInput
    team_invitations?: team_invitationsOrderByRelationAggregateInput
    team_members?: team_membersOrderByRelationAggregateInput
    teams?: teamsOrderByRelationAggregateInput
    transactions?: transactionsOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    gender?: StringNullableFilter<"User"> | string | null
    created_at?: DateTimeNullableFilter<"User"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"User"> | Date | string | null
    change_requests?: Change_requestsListRelationFilter
    notifications?: NotificationsListRelationFilter
    team_invitations?: Team_invitationsListRelationFilter
    team_members?: Team_membersListRelationFilter
    teams?: TeamsListRelationFilter
    transactions?: TransactionsListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    gender?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    gender?: StringNullableWithAggregatesFilter<"User"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type change_requestsWhereInput = {
    AND?: change_requestsWhereInput | change_requestsWhereInput[]
    OR?: change_requestsWhereInput[]
    NOT?: change_requestsWhereInput | change_requestsWhereInput[]
    id?: IntFilter<"change_requests"> | number
    requester_id?: IntFilter<"change_requests"> | number
    target_transaction_id?: IntFilter<"change_requests"> | number
    type?: StringFilter<"change_requests"> | string
    status?: Enumchange_request_statusFilter<"change_requests"> | $Enums.change_request_status
    reason?: StringFilter<"change_requests"> | string
    created_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    transactions?: XOR<TransactionsScalarRelationFilter, transactionsWhereInput>
  }

  export type change_requestsOrderByWithRelationInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    User?: UserOrderByWithRelationInput
    transactions?: transactionsOrderByWithRelationInput
  }

  export type change_requestsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: change_requestsWhereInput | change_requestsWhereInput[]
    OR?: change_requestsWhereInput[]
    NOT?: change_requestsWhereInput | change_requestsWhereInput[]
    requester_id?: IntFilter<"change_requests"> | number
    target_transaction_id?: IntFilter<"change_requests"> | number
    type?: StringFilter<"change_requests"> | string
    status?: Enumchange_request_statusFilter<"change_requests"> | $Enums.change_request_status
    reason?: StringFilter<"change_requests"> | string
    created_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    transactions?: XOR<TransactionsScalarRelationFilter, transactionsWhereInput>
  }, "id">

  export type change_requestsOrderByWithAggregationInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: change_requestsCountOrderByAggregateInput
    _avg?: change_requestsAvgOrderByAggregateInput
    _max?: change_requestsMaxOrderByAggregateInput
    _min?: change_requestsMinOrderByAggregateInput
    _sum?: change_requestsSumOrderByAggregateInput
  }

  export type change_requestsScalarWhereWithAggregatesInput = {
    AND?: change_requestsScalarWhereWithAggregatesInput | change_requestsScalarWhereWithAggregatesInput[]
    OR?: change_requestsScalarWhereWithAggregatesInput[]
    NOT?: change_requestsScalarWhereWithAggregatesInput | change_requestsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"change_requests"> | number
    requester_id?: IntWithAggregatesFilter<"change_requests"> | number
    target_transaction_id?: IntWithAggregatesFilter<"change_requests"> | number
    type?: StringWithAggregatesFilter<"change_requests"> | string
    status?: Enumchange_request_statusWithAggregatesFilter<"change_requests"> | $Enums.change_request_status
    reason?: StringWithAggregatesFilter<"change_requests"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"change_requests"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"change_requests"> | Date | string | null
  }

  export type notificationsWhereInput = {
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    id?: IntFilter<"notifications"> | number
    user_id?: IntFilter<"notifications"> | number
    team_id?: IntNullableFilter<"notifications"> | number | null
    type?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    is_read?: BoolNullableFilter<"notifications"> | boolean | null
    related_resource_id?: IntNullableFilter<"notifications"> | number | null
    created_at?: DateTimeNullableFilter<"notifications"> | Date | string | null
    teams?: XOR<TeamsNullableScalarRelationFilter, teamsWhereInput> | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type notificationsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrderInput | SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrderInput | SortOrder
    related_resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    teams?: teamsOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type notificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    user_id?: IntFilter<"notifications"> | number
    team_id?: IntNullableFilter<"notifications"> | number | null
    type?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    is_read?: BoolNullableFilter<"notifications"> | boolean | null
    related_resource_id?: IntNullableFilter<"notifications"> | number | null
    created_at?: DateTimeNullableFilter<"notifications"> | Date | string | null
    teams?: XOR<TeamsNullableScalarRelationFilter, teamsWhereInput> | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type notificationsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrderInput | SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrderInput | SortOrder
    related_resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: notificationsCountOrderByAggregateInput
    _avg?: notificationsAvgOrderByAggregateInput
    _max?: notificationsMaxOrderByAggregateInput
    _min?: notificationsMinOrderByAggregateInput
    _sum?: notificationsSumOrderByAggregateInput
  }

  export type notificationsScalarWhereWithAggregatesInput = {
    AND?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    OR?: notificationsScalarWhereWithAggregatesInput[]
    NOT?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"notifications"> | number
    user_id?: IntWithAggregatesFilter<"notifications"> | number
    team_id?: IntNullableWithAggregatesFilter<"notifications"> | number | null
    type?: StringWithAggregatesFilter<"notifications"> | string
    message?: StringWithAggregatesFilter<"notifications"> | string
    is_read?: BoolNullableWithAggregatesFilter<"notifications"> | boolean | null
    related_resource_id?: IntNullableWithAggregatesFilter<"notifications"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"notifications"> | Date | string | null
  }

  export type team_invitationsWhereInput = {
    AND?: team_invitationsWhereInput | team_invitationsWhereInput[]
    OR?: team_invitationsWhereInput[]
    NOT?: team_invitationsWhereInput | team_invitationsWhereInput[]
    id?: IntFilter<"team_invitations"> | number
    token?: UuidFilter<"team_invitations"> | string
    team_id?: IntFilter<"team_invitations"> | number
    inviter_id?: IntFilter<"team_invitations"> | number
    invitee_email?: StringFilter<"team_invitations"> | string
    status?: Enuminvitation_statusFilter<"team_invitations"> | $Enums.invitation_status
    created_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
  }

  export type team_invitationsOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
    invitee_email?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    User?: UserOrderByWithRelationInput
    teams?: teamsOrderByWithRelationInput
  }

  export type team_invitationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    AND?: team_invitationsWhereInput | team_invitationsWhereInput[]
    OR?: team_invitationsWhereInput[]
    NOT?: team_invitationsWhereInput | team_invitationsWhereInput[]
    team_id?: IntFilter<"team_invitations"> | number
    inviter_id?: IntFilter<"team_invitations"> | number
    invitee_email?: StringFilter<"team_invitations"> | string
    status?: Enuminvitation_statusFilter<"team_invitations"> | $Enums.invitation_status
    created_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
  }, "id" | "token">

  export type team_invitationsOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
    invitee_email?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    _count?: team_invitationsCountOrderByAggregateInput
    _avg?: team_invitationsAvgOrderByAggregateInput
    _max?: team_invitationsMaxOrderByAggregateInput
    _min?: team_invitationsMinOrderByAggregateInput
    _sum?: team_invitationsSumOrderByAggregateInput
  }

  export type team_invitationsScalarWhereWithAggregatesInput = {
    AND?: team_invitationsScalarWhereWithAggregatesInput | team_invitationsScalarWhereWithAggregatesInput[]
    OR?: team_invitationsScalarWhereWithAggregatesInput[]
    NOT?: team_invitationsScalarWhereWithAggregatesInput | team_invitationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"team_invitations"> | number
    token?: UuidWithAggregatesFilter<"team_invitations"> | string
    team_id?: IntWithAggregatesFilter<"team_invitations"> | number
    inviter_id?: IntWithAggregatesFilter<"team_invitations"> | number
    invitee_email?: StringWithAggregatesFilter<"team_invitations"> | string
    status?: Enuminvitation_statusWithAggregatesFilter<"team_invitations"> | $Enums.invitation_status
    created_at?: DateTimeNullableWithAggregatesFilter<"team_invitations"> | Date | string | null
    expires_at?: DateTimeNullableWithAggregatesFilter<"team_invitations"> | Date | string | null
  }

  export type team_membersWhereInput = {
    AND?: team_membersWhereInput | team_membersWhereInput[]
    OR?: team_membersWhereInput[]
    NOT?: team_membersWhereInput | team_membersWhereInput[]
    team_id?: IntFilter<"team_members"> | number
    user_id?: IntFilter<"team_members"> | number
    role?: StringNullableFilter<"team_members"> | string | null
    joined_at?: DateTimeNullableFilter<"team_members"> | Date | string | null
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type team_membersOrderByWithRelationInput = {
    team_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrderInput | SortOrder
    joined_at?: SortOrderInput | SortOrder
    teams?: teamsOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type team_membersWhereUniqueInput = Prisma.AtLeast<{
    team_id_user_id?: team_membersTeam_idUser_idCompoundUniqueInput
    AND?: team_membersWhereInput | team_membersWhereInput[]
    OR?: team_membersWhereInput[]
    NOT?: team_membersWhereInput | team_membersWhereInput[]
    team_id?: IntFilter<"team_members"> | number
    user_id?: IntFilter<"team_members"> | number
    role?: StringNullableFilter<"team_members"> | string | null
    joined_at?: DateTimeNullableFilter<"team_members"> | Date | string | null
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "team_id_user_id">

  export type team_membersOrderByWithAggregationInput = {
    team_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrderInput | SortOrder
    joined_at?: SortOrderInput | SortOrder
    _count?: team_membersCountOrderByAggregateInput
    _avg?: team_membersAvgOrderByAggregateInput
    _max?: team_membersMaxOrderByAggregateInput
    _min?: team_membersMinOrderByAggregateInput
    _sum?: team_membersSumOrderByAggregateInput
  }

  export type team_membersScalarWhereWithAggregatesInput = {
    AND?: team_membersScalarWhereWithAggregatesInput | team_membersScalarWhereWithAggregatesInput[]
    OR?: team_membersScalarWhereWithAggregatesInput[]
    NOT?: team_membersScalarWhereWithAggregatesInput | team_membersScalarWhereWithAggregatesInput[]
    team_id?: IntWithAggregatesFilter<"team_members"> | number
    user_id?: IntWithAggregatesFilter<"team_members"> | number
    role?: StringNullableWithAggregatesFilter<"team_members"> | string | null
    joined_at?: DateTimeNullableWithAggregatesFilter<"team_members"> | Date | string | null
  }

  export type teamsWhereInput = {
    AND?: teamsWhereInput | teamsWhereInput[]
    OR?: teamsWhereInput[]
    NOT?: teamsWhereInput | teamsWhereInput[]
    id?: IntFilter<"teams"> | number
    team_name?: StringFilter<"teams"> | string
    owner_id?: IntFilter<"teams"> | number
    currency?: StringFilter<"teams"> | string
    budget?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    income_goal?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: BoolNullableFilter<"teams"> | boolean | null
    categories?: JsonFilter<"teams">
    created_at?: DateTimeNullableFilter<"teams"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"teams"> | Date | string | null
    notifications?: NotificationsListRelationFilter
    team_invitations?: Team_invitationsListRelationFilter
    team_members?: Team_membersListRelationFilter
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    transactions?: TransactionsListRelationFilter
  }

  export type teamsOrderByWithRelationInput = {
    id?: SortOrder
    team_name?: SortOrder
    owner_id?: SortOrder
    currency?: SortOrder
    budget?: SortOrderInput | SortOrder
    income_goal?: SortOrderInput | SortOrder
    allow_member_view_report?: SortOrderInput | SortOrder
    categories?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    notifications?: notificationsOrderByRelationAggregateInput
    team_invitations?: team_invitationsOrderByRelationAggregateInput
    team_members?: team_membersOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    transactions?: transactionsOrderByRelationAggregateInput
  }

  export type teamsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: teamsWhereInput | teamsWhereInput[]
    OR?: teamsWhereInput[]
    NOT?: teamsWhereInput | teamsWhereInput[]
    team_name?: StringFilter<"teams"> | string
    owner_id?: IntFilter<"teams"> | number
    currency?: StringFilter<"teams"> | string
    budget?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    income_goal?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: BoolNullableFilter<"teams"> | boolean | null
    categories?: JsonFilter<"teams">
    created_at?: DateTimeNullableFilter<"teams"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"teams"> | Date | string | null
    notifications?: NotificationsListRelationFilter
    team_invitations?: Team_invitationsListRelationFilter
    team_members?: Team_membersListRelationFilter
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    transactions?: TransactionsListRelationFilter
  }, "id">

  export type teamsOrderByWithAggregationInput = {
    id?: SortOrder
    team_name?: SortOrder
    owner_id?: SortOrder
    currency?: SortOrder
    budget?: SortOrderInput | SortOrder
    income_goal?: SortOrderInput | SortOrder
    allow_member_view_report?: SortOrderInput | SortOrder
    categories?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: teamsCountOrderByAggregateInput
    _avg?: teamsAvgOrderByAggregateInput
    _max?: teamsMaxOrderByAggregateInput
    _min?: teamsMinOrderByAggregateInput
    _sum?: teamsSumOrderByAggregateInput
  }

  export type teamsScalarWhereWithAggregatesInput = {
    AND?: teamsScalarWhereWithAggregatesInput | teamsScalarWhereWithAggregatesInput[]
    OR?: teamsScalarWhereWithAggregatesInput[]
    NOT?: teamsScalarWhereWithAggregatesInput | teamsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"teams"> | number
    team_name?: StringWithAggregatesFilter<"teams"> | string
    owner_id?: IntWithAggregatesFilter<"teams"> | number
    currency?: StringWithAggregatesFilter<"teams"> | string
    budget?: DecimalNullableWithAggregatesFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    income_goal?: DecimalNullableWithAggregatesFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: BoolNullableWithAggregatesFilter<"teams"> | boolean | null
    categories?: JsonWithAggregatesFilter<"teams">
    created_at?: DateTimeNullableWithAggregatesFilter<"teams"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"teams"> | Date | string | null
  }

  export type transactionsWhereInput = {
    AND?: transactionsWhereInput | transactionsWhereInput[]
    OR?: transactionsWhereInput[]
    NOT?: transactionsWhereInput | transactionsWhereInput[]
    id?: IntFilter<"transactions"> | number
    team_id?: IntFilter<"transactions"> | number
    user_id?: IntFilter<"transactions"> | number
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFilter<"transactions"> | $Enums.transaction_type
    category_name?: StringNullableFilter<"transactions"> | string | null
    category_icon?: StringNullableFilter<"transactions"> | string | null
    description?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
    created_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
    change_requests?: Change_requestsListRelationFilter
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type transactionsOrderByWithRelationInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    category_name?: SortOrderInput | SortOrder
    category_icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    transaction_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    change_requests?: change_requestsOrderByRelationAggregateInput
    teams?: teamsOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type transactionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: transactionsWhereInput | transactionsWhereInput[]
    OR?: transactionsWhereInput[]
    NOT?: transactionsWhereInput | transactionsWhereInput[]
    team_id?: IntFilter<"transactions"> | number
    user_id?: IntFilter<"transactions"> | number
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFilter<"transactions"> | $Enums.transaction_type
    category_name?: StringNullableFilter<"transactions"> | string | null
    category_icon?: StringNullableFilter<"transactions"> | string | null
    description?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
    created_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
    change_requests?: Change_requestsListRelationFilter
    teams?: XOR<TeamsScalarRelationFilter, teamsWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type transactionsOrderByWithAggregationInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    category_name?: SortOrderInput | SortOrder
    category_icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    transaction_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: transactionsCountOrderByAggregateInput
    _avg?: transactionsAvgOrderByAggregateInput
    _max?: transactionsMaxOrderByAggregateInput
    _min?: transactionsMinOrderByAggregateInput
    _sum?: transactionsSumOrderByAggregateInput
  }

  export type transactionsScalarWhereWithAggregatesInput = {
    AND?: transactionsScalarWhereWithAggregatesInput | transactionsScalarWhereWithAggregatesInput[]
    OR?: transactionsScalarWhereWithAggregatesInput[]
    NOT?: transactionsScalarWhereWithAggregatesInput | transactionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"transactions"> | number
    team_id?: IntWithAggregatesFilter<"transactions"> | number
    user_id?: IntWithAggregatesFilter<"transactions"> | number
    amount?: DecimalWithAggregatesFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeWithAggregatesFilter<"transactions"> | $Enums.transaction_type
    category_name?: StringNullableWithAggregatesFilter<"transactions"> | string | null
    category_icon?: StringNullableWithAggregatesFilter<"transactions"> | string | null
    description?: StringNullableWithAggregatesFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableWithAggregatesFilter<"transactions"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"transactions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"transactions"> | Date | string | null
  }

  export type UserCreateInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsCreateInput = {
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    User: UserCreateNestedOneWithoutChange_requestsInput
    transactions: transactionsCreateNestedOneWithoutChange_requestsInput
  }

  export type change_requestsUncheckedCreateInput = {
    id?: number
    requester_id: number
    target_transaction_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutChange_requestsNestedInput
    transactions?: transactionsUpdateOneRequiredWithoutChange_requestsNestedInput
  }

  export type change_requestsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    requester_id?: IntFieldUpdateOperationsInput | number
    target_transaction_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsCreateManyInput = {
    id?: number
    requester_id: number
    target_transaction_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    requester_id?: IntFieldUpdateOperationsInput | number
    target_transaction_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsCreateInput = {
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
    teams?: teamsCreateNestedOneWithoutNotificationsInput
    User: UserCreateNestedOneWithoutNotificationsInput
  }

  export type notificationsUncheckedCreateInput = {
    id?: number
    user_id: number
    team_id?: number | null
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type notificationsUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneWithoutNotificationsNestedInput
    User?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type notificationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsCreateManyInput = {
    id?: number
    user_id: number
    team_id?: number | null
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type notificationsUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsCreateInput = {
    token?: string
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
    User: UserCreateNestedOneWithoutTeam_invitationsInput
    teams: teamsCreateNestedOneWithoutTeam_invitationsInput
  }

  export type team_invitationsUncheckedCreateInput = {
    id?: number
    token?: string
    team_id: number
    inviter_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_invitationsUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTeam_invitationsNestedInput
    teams?: teamsUpdateOneRequiredWithoutTeam_invitationsNestedInput
  }

  export type team_invitationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    team_id?: IntFieldUpdateOperationsInput | number
    inviter_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsCreateManyInput = {
    id?: number
    token?: string
    team_id: number
    inviter_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_invitationsUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    team_id?: IntFieldUpdateOperationsInput | number
    inviter_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersCreateInput = {
    role?: string | null
    joined_at?: Date | string | null
    teams: teamsCreateNestedOneWithoutTeam_membersInput
    User: UserCreateNestedOneWithoutTeam_membersInput
  }

  export type team_membersUncheckedCreateInput = {
    team_id: number
    user_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type team_membersUpdateInput = {
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneRequiredWithoutTeam_membersNestedInput
    User?: UserUpdateOneRequiredWithoutTeam_membersNestedInput
  }

  export type team_membersUncheckedUpdateInput = {
    team_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersCreateManyInput = {
    team_id: number
    user_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type team_membersUpdateManyMutationInput = {
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersUncheckedUpdateManyInput = {
    team_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamsCreateInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsCreateNestedManyWithoutTeamsInput
    team_members?: team_membersCreateNestedManyWithoutTeamsInput
    User: UserCreateNestedOneWithoutTeamsInput
    transactions?: transactionsCreateNestedManyWithoutTeamsInput
  }

  export type teamsUncheckedCreateInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutTeamsInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutTeamsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsUpdateInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUpdateManyWithoutTeamsNestedInput
    User?: UserUpdateOneRequiredWithoutTeamsNestedInput
    transactions?: transactionsUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type teamsCreateManyInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type teamsUpdateManyMutationInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsCreateInput = {
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutTransactionsInput
    teams: teamsCreateNestedOneWithoutTransactionsInput
    User: UserCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateInput = {
    id?: number
    team_id: number
    user_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type transactionsUpdateInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutTransactionsNestedInput
    teams?: teamsUpdateOneRequiredWithoutTransactionsNestedInput
    User?: UserUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type transactionsCreateManyInput = {
    id?: number
    team_id: number
    user_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type transactionsUpdateManyMutationInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Change_requestsListRelationFilter = {
    every?: change_requestsWhereInput
    some?: change_requestsWhereInput
    none?: change_requestsWhereInput
  }

  export type NotificationsListRelationFilter = {
    every?: notificationsWhereInput
    some?: notificationsWhereInput
    none?: notificationsWhereInput
  }

  export type Team_invitationsListRelationFilter = {
    every?: team_invitationsWhereInput
    some?: team_invitationsWhereInput
    none?: team_invitationsWhereInput
  }

  export type Team_membersListRelationFilter = {
    every?: team_membersWhereInput
    some?: team_membersWhereInput
    none?: team_membersWhereInput
  }

  export type TeamsListRelationFilter = {
    every?: teamsWhereInput
    some?: teamsWhereInput
    none?: teamsWhereInput
  }

  export type TransactionsListRelationFilter = {
    every?: transactionsWhereInput
    some?: transactionsWhereInput
    none?: transactionsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type change_requestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type team_invitationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type team_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type teamsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transactionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    gender?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    gender?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    gender?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumchange_request_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.change_request_status | Enumchange_request_statusFieldRefInput<$PrismaModel>
    in?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumchange_request_statusFilter<$PrismaModel> | $Enums.change_request_status
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type TransactionsScalarRelationFilter = {
    is?: transactionsWhereInput
    isNot?: transactionsWhereInput
  }

  export type change_requestsCountOrderByAggregateInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type change_requestsAvgOrderByAggregateInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
  }

  export type change_requestsMaxOrderByAggregateInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type change_requestsMinOrderByAggregateInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reason?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type change_requestsSumOrderByAggregateInput = {
    id?: SortOrder
    requester_id?: SortOrder
    target_transaction_id?: SortOrder
  }

  export type Enumchange_request_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.change_request_status | Enumchange_request_statusFieldRefInput<$PrismaModel>
    in?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumchange_request_statusWithAggregatesFilter<$PrismaModel> | $Enums.change_request_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumchange_request_statusFilter<$PrismaModel>
    _max?: NestedEnumchange_request_statusFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type TeamsNullableScalarRelationFilter = {
    is?: teamsWhereInput | null
    isNot?: teamsWhereInput | null
  }

  export type notificationsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    related_resource_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrder
    related_resource_id?: SortOrder
  }

  export type notificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    related_resource_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    related_resource_id?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    team_id?: SortOrder
    related_resource_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type Enuminvitation_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.invitation_status | Enuminvitation_statusFieldRefInput<$PrismaModel>
    in?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    not?: NestedEnuminvitation_statusFilter<$PrismaModel> | $Enums.invitation_status
  }

  export type TeamsScalarRelationFilter = {
    is?: teamsWhereInput
    isNot?: teamsWhereInput
  }

  export type team_invitationsCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
    invitee_email?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
  }

  export type team_invitationsAvgOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
  }

  export type team_invitationsMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
    invitee_email?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
  }

  export type team_invitationsMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
    invitee_email?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
  }

  export type team_invitationsSumOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    inviter_id?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type Enuminvitation_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.invitation_status | Enuminvitation_statusFieldRefInput<$PrismaModel>
    in?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    not?: NestedEnuminvitation_statusWithAggregatesFilter<$PrismaModel> | $Enums.invitation_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnuminvitation_statusFilter<$PrismaModel>
    _max?: NestedEnuminvitation_statusFilter<$PrismaModel>
  }

  export type team_membersTeam_idUser_idCompoundUniqueInput = {
    team_id: number
    user_id: number
  }

  export type team_membersCountOrderByAggregateInput = {
    team_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
  }

  export type team_membersAvgOrderByAggregateInput = {
    team_id?: SortOrder
    user_id?: SortOrder
  }

  export type team_membersMaxOrderByAggregateInput = {
    team_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
  }

  export type team_membersMinOrderByAggregateInput = {
    team_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
  }

  export type team_membersSumOrderByAggregateInput = {
    team_id?: SortOrder
    user_id?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type teamsCountOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    owner_id?: SortOrder
    currency?: SortOrder
    budget?: SortOrder
    income_goal?: SortOrder
    allow_member_view_report?: SortOrder
    categories?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type teamsAvgOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
    budget?: SortOrder
    income_goal?: SortOrder
  }

  export type teamsMaxOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    owner_id?: SortOrder
    currency?: SortOrder
    budget?: SortOrder
    income_goal?: SortOrder
    allow_member_view_report?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type teamsMinOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    owner_id?: SortOrder
    currency?: SortOrder
    budget?: SortOrder
    income_goal?: SortOrder
    allow_member_view_report?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type teamsSumOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
    budget?: SortOrder
    income_goal?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Enumtransaction_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type | Enumtransaction_typeFieldRefInput<$PrismaModel>
    in?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumtransaction_typeFilter<$PrismaModel> | $Enums.transaction_type
  }

  export type transactionsCountOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    category_name?: SortOrder
    category_icon?: SortOrder
    description?: SortOrder
    transaction_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type transactionsAvgOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
  }

  export type transactionsMaxOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    category_name?: SortOrder
    category_icon?: SortOrder
    description?: SortOrder
    transaction_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type transactionsMinOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    category_name?: SortOrder
    category_icon?: SortOrder
    description?: SortOrder
    transaction_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type transactionsSumOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Enumtransaction_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type | Enumtransaction_typeFieldRefInput<$PrismaModel>
    in?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumtransaction_typeWithAggregatesFilter<$PrismaModel> | $Enums.transaction_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtransaction_typeFilter<$PrismaModel>
    _max?: NestedEnumtransaction_typeFilter<$PrismaModel>
  }

  export type change_requestsCreateNestedManyWithoutUserInput = {
    create?: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput> | change_requestsCreateWithoutUserInput[] | change_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutUserInput | change_requestsCreateOrConnectWithoutUserInput[]
    createMany?: change_requestsCreateManyUserInputEnvelope
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
  }

  export type notificationsCreateNestedManyWithoutUserInput = {
    create?: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput> | notificationsCreateWithoutUserInput[] | notificationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUserInput | notificationsCreateOrConnectWithoutUserInput[]
    createMany?: notificationsCreateManyUserInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type team_invitationsCreateNestedManyWithoutUserInput = {
    create?: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput> | team_invitationsCreateWithoutUserInput[] | team_invitationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutUserInput | team_invitationsCreateOrConnectWithoutUserInput[]
    createMany?: team_invitationsCreateManyUserInputEnvelope
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
  }

  export type team_membersCreateNestedManyWithoutUserInput = {
    create?: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput> | team_membersCreateWithoutUserInput[] | team_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutUserInput | team_membersCreateOrConnectWithoutUserInput[]
    createMany?: team_membersCreateManyUserInputEnvelope
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
  }

  export type teamsCreateNestedManyWithoutUserInput = {
    create?: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput> | teamsCreateWithoutUserInput[] | teamsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: teamsCreateOrConnectWithoutUserInput | teamsCreateOrConnectWithoutUserInput[]
    createMany?: teamsCreateManyUserInputEnvelope
    connect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
  }

  export type transactionsCreateNestedManyWithoutUserInput = {
    create?: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput> | transactionsCreateWithoutUserInput[] | transactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUserInput | transactionsCreateOrConnectWithoutUserInput[]
    createMany?: transactionsCreateManyUserInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type change_requestsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput> | change_requestsCreateWithoutUserInput[] | change_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutUserInput | change_requestsCreateOrConnectWithoutUserInput[]
    createMany?: change_requestsCreateManyUserInputEnvelope
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
  }

  export type notificationsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput> | notificationsCreateWithoutUserInput[] | notificationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUserInput | notificationsCreateOrConnectWithoutUserInput[]
    createMany?: notificationsCreateManyUserInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type team_invitationsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput> | team_invitationsCreateWithoutUserInput[] | team_invitationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutUserInput | team_invitationsCreateOrConnectWithoutUserInput[]
    createMany?: team_invitationsCreateManyUserInputEnvelope
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
  }

  export type team_membersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput> | team_membersCreateWithoutUserInput[] | team_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutUserInput | team_membersCreateOrConnectWithoutUserInput[]
    createMany?: team_membersCreateManyUserInputEnvelope
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
  }

  export type teamsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput> | teamsCreateWithoutUserInput[] | teamsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: teamsCreateOrConnectWithoutUserInput | teamsCreateOrConnectWithoutUserInput[]
    createMany?: teamsCreateManyUserInputEnvelope
    connect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
  }

  export type transactionsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput> | transactionsCreateWithoutUserInput[] | transactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUserInput | transactionsCreateOrConnectWithoutUserInput[]
    createMany?: transactionsCreateManyUserInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type change_requestsUpdateManyWithoutUserNestedInput = {
    create?: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput> | change_requestsCreateWithoutUserInput[] | change_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutUserInput | change_requestsCreateOrConnectWithoutUserInput[]
    upsert?: change_requestsUpsertWithWhereUniqueWithoutUserInput | change_requestsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: change_requestsCreateManyUserInputEnvelope
    set?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    disconnect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    delete?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    update?: change_requestsUpdateWithWhereUniqueWithoutUserInput | change_requestsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: change_requestsUpdateManyWithWhereWithoutUserInput | change_requestsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
  }

  export type notificationsUpdateManyWithoutUserNestedInput = {
    create?: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput> | notificationsCreateWithoutUserInput[] | notificationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUserInput | notificationsCreateOrConnectWithoutUserInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutUserInput | notificationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: notificationsCreateManyUserInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutUserInput | notificationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutUserInput | notificationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type team_invitationsUpdateManyWithoutUserNestedInput = {
    create?: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput> | team_invitationsCreateWithoutUserInput[] | team_invitationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutUserInput | team_invitationsCreateOrConnectWithoutUserInput[]
    upsert?: team_invitationsUpsertWithWhereUniqueWithoutUserInput | team_invitationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: team_invitationsCreateManyUserInputEnvelope
    set?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    disconnect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    delete?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    update?: team_invitationsUpdateWithWhereUniqueWithoutUserInput | team_invitationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: team_invitationsUpdateManyWithWhereWithoutUserInput | team_invitationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
  }

  export type team_membersUpdateManyWithoutUserNestedInput = {
    create?: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput> | team_membersCreateWithoutUserInput[] | team_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutUserInput | team_membersCreateOrConnectWithoutUserInput[]
    upsert?: team_membersUpsertWithWhereUniqueWithoutUserInput | team_membersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: team_membersCreateManyUserInputEnvelope
    set?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    disconnect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    delete?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    update?: team_membersUpdateWithWhereUniqueWithoutUserInput | team_membersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: team_membersUpdateManyWithWhereWithoutUserInput | team_membersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
  }

  export type teamsUpdateManyWithoutUserNestedInput = {
    create?: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput> | teamsCreateWithoutUserInput[] | teamsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: teamsCreateOrConnectWithoutUserInput | teamsCreateOrConnectWithoutUserInput[]
    upsert?: teamsUpsertWithWhereUniqueWithoutUserInput | teamsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: teamsCreateManyUserInputEnvelope
    set?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    disconnect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    delete?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    connect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    update?: teamsUpdateWithWhereUniqueWithoutUserInput | teamsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: teamsUpdateManyWithWhereWithoutUserInput | teamsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: teamsScalarWhereInput | teamsScalarWhereInput[]
  }

  export type transactionsUpdateManyWithoutUserNestedInput = {
    create?: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput> | transactionsCreateWithoutUserInput[] | transactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUserInput | transactionsCreateOrConnectWithoutUserInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutUserInput | transactionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transactionsCreateManyUserInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutUserInput | transactionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutUserInput | transactionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type change_requestsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput> | change_requestsCreateWithoutUserInput[] | change_requestsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutUserInput | change_requestsCreateOrConnectWithoutUserInput[]
    upsert?: change_requestsUpsertWithWhereUniqueWithoutUserInput | change_requestsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: change_requestsCreateManyUserInputEnvelope
    set?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    disconnect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    delete?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    update?: change_requestsUpdateWithWhereUniqueWithoutUserInput | change_requestsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: change_requestsUpdateManyWithWhereWithoutUserInput | change_requestsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
  }

  export type notificationsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput> | notificationsCreateWithoutUserInput[] | notificationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUserInput | notificationsCreateOrConnectWithoutUserInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutUserInput | notificationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: notificationsCreateManyUserInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutUserInput | notificationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutUserInput | notificationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type team_invitationsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput> | team_invitationsCreateWithoutUserInput[] | team_invitationsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutUserInput | team_invitationsCreateOrConnectWithoutUserInput[]
    upsert?: team_invitationsUpsertWithWhereUniqueWithoutUserInput | team_invitationsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: team_invitationsCreateManyUserInputEnvelope
    set?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    disconnect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    delete?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    update?: team_invitationsUpdateWithWhereUniqueWithoutUserInput | team_invitationsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: team_invitationsUpdateManyWithWhereWithoutUserInput | team_invitationsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
  }

  export type team_membersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput> | team_membersCreateWithoutUserInput[] | team_membersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutUserInput | team_membersCreateOrConnectWithoutUserInput[]
    upsert?: team_membersUpsertWithWhereUniqueWithoutUserInput | team_membersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: team_membersCreateManyUserInputEnvelope
    set?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    disconnect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    delete?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    update?: team_membersUpdateWithWhereUniqueWithoutUserInput | team_membersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: team_membersUpdateManyWithWhereWithoutUserInput | team_membersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
  }

  export type teamsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput> | teamsCreateWithoutUserInput[] | teamsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: teamsCreateOrConnectWithoutUserInput | teamsCreateOrConnectWithoutUserInput[]
    upsert?: teamsUpsertWithWhereUniqueWithoutUserInput | teamsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: teamsCreateManyUserInputEnvelope
    set?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    disconnect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    delete?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    connect?: teamsWhereUniqueInput | teamsWhereUniqueInput[]
    update?: teamsUpdateWithWhereUniqueWithoutUserInput | teamsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: teamsUpdateManyWithWhereWithoutUserInput | teamsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: teamsScalarWhereInput | teamsScalarWhereInput[]
  }

  export type transactionsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput> | transactionsCreateWithoutUserInput[] | transactionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutUserInput | transactionsCreateOrConnectWithoutUserInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutUserInput | transactionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: transactionsCreateManyUserInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutUserInput | transactionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutUserInput | transactionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutChange_requestsInput = {
    create?: XOR<UserCreateWithoutChange_requestsInput, UserUncheckedCreateWithoutChange_requestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutChange_requestsInput
    connect?: UserWhereUniqueInput
  }

  export type transactionsCreateNestedOneWithoutChange_requestsInput = {
    create?: XOR<transactionsCreateWithoutChange_requestsInput, transactionsUncheckedCreateWithoutChange_requestsInput>
    connectOrCreate?: transactionsCreateOrConnectWithoutChange_requestsInput
    connect?: transactionsWhereUniqueInput
  }

  export type Enumchange_request_statusFieldUpdateOperationsInput = {
    set?: $Enums.change_request_status
  }

  export type UserUpdateOneRequiredWithoutChange_requestsNestedInput = {
    create?: XOR<UserCreateWithoutChange_requestsInput, UserUncheckedCreateWithoutChange_requestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutChange_requestsInput
    upsert?: UserUpsertWithoutChange_requestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChange_requestsInput, UserUpdateWithoutChange_requestsInput>, UserUncheckedUpdateWithoutChange_requestsInput>
  }

  export type transactionsUpdateOneRequiredWithoutChange_requestsNestedInput = {
    create?: XOR<transactionsCreateWithoutChange_requestsInput, transactionsUncheckedCreateWithoutChange_requestsInput>
    connectOrCreate?: transactionsCreateOrConnectWithoutChange_requestsInput
    upsert?: transactionsUpsertWithoutChange_requestsInput
    connect?: transactionsWhereUniqueInput
    update?: XOR<XOR<transactionsUpdateToOneWithWhereWithoutChange_requestsInput, transactionsUpdateWithoutChange_requestsInput>, transactionsUncheckedUpdateWithoutChange_requestsInput>
  }

  export type teamsCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<teamsCreateWithoutNotificationsInput, teamsUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutNotificationsInput
    connect?: teamsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type teamsUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<teamsCreateWithoutNotificationsInput, teamsUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutNotificationsInput
    upsert?: teamsUpsertWithoutNotificationsInput
    disconnect?: teamsWhereInput | boolean
    delete?: teamsWhereInput | boolean
    connect?: teamsWhereUniqueInput
    update?: XOR<XOR<teamsUpdateToOneWithWhereWithoutNotificationsInput, teamsUpdateWithoutNotificationsInput>, teamsUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserCreateNestedOneWithoutTeam_invitationsInput = {
    create?: XOR<UserCreateWithoutTeam_invitationsInput, UserUncheckedCreateWithoutTeam_invitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeam_invitationsInput
    connect?: UserWhereUniqueInput
  }

  export type teamsCreateNestedOneWithoutTeam_invitationsInput = {
    create?: XOR<teamsCreateWithoutTeam_invitationsInput, teamsUncheckedCreateWithoutTeam_invitationsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTeam_invitationsInput
    connect?: teamsWhereUniqueInput
  }

  export type Enuminvitation_statusFieldUpdateOperationsInput = {
    set?: $Enums.invitation_status
  }

  export type UserUpdateOneRequiredWithoutTeam_invitationsNestedInput = {
    create?: XOR<UserCreateWithoutTeam_invitationsInput, UserUncheckedCreateWithoutTeam_invitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeam_invitationsInput
    upsert?: UserUpsertWithoutTeam_invitationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTeam_invitationsInput, UserUpdateWithoutTeam_invitationsInput>, UserUncheckedUpdateWithoutTeam_invitationsInput>
  }

  export type teamsUpdateOneRequiredWithoutTeam_invitationsNestedInput = {
    create?: XOR<teamsCreateWithoutTeam_invitationsInput, teamsUncheckedCreateWithoutTeam_invitationsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTeam_invitationsInput
    upsert?: teamsUpsertWithoutTeam_invitationsInput
    connect?: teamsWhereUniqueInput
    update?: XOR<XOR<teamsUpdateToOneWithWhereWithoutTeam_invitationsInput, teamsUpdateWithoutTeam_invitationsInput>, teamsUncheckedUpdateWithoutTeam_invitationsInput>
  }

  export type teamsCreateNestedOneWithoutTeam_membersInput = {
    create?: XOR<teamsCreateWithoutTeam_membersInput, teamsUncheckedCreateWithoutTeam_membersInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTeam_membersInput
    connect?: teamsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTeam_membersInput = {
    create?: XOR<UserCreateWithoutTeam_membersInput, UserUncheckedCreateWithoutTeam_membersInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeam_membersInput
    connect?: UserWhereUniqueInput
  }

  export type teamsUpdateOneRequiredWithoutTeam_membersNestedInput = {
    create?: XOR<teamsCreateWithoutTeam_membersInput, teamsUncheckedCreateWithoutTeam_membersInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTeam_membersInput
    upsert?: teamsUpsertWithoutTeam_membersInput
    connect?: teamsWhereUniqueInput
    update?: XOR<XOR<teamsUpdateToOneWithWhereWithoutTeam_membersInput, teamsUpdateWithoutTeam_membersInput>, teamsUncheckedUpdateWithoutTeam_membersInput>
  }

  export type UserUpdateOneRequiredWithoutTeam_membersNestedInput = {
    create?: XOR<UserCreateWithoutTeam_membersInput, UserUncheckedCreateWithoutTeam_membersInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeam_membersInput
    upsert?: UserUpsertWithoutTeam_membersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTeam_membersInput, UserUpdateWithoutTeam_membersInput>, UserUncheckedUpdateWithoutTeam_membersInput>
  }

  export type notificationsCreateNestedManyWithoutTeamsInput = {
    create?: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput> | notificationsCreateWithoutTeamsInput[] | notificationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutTeamsInput | notificationsCreateOrConnectWithoutTeamsInput[]
    createMany?: notificationsCreateManyTeamsInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type team_invitationsCreateNestedManyWithoutTeamsInput = {
    create?: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput> | team_invitationsCreateWithoutTeamsInput[] | team_invitationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutTeamsInput | team_invitationsCreateOrConnectWithoutTeamsInput[]
    createMany?: team_invitationsCreateManyTeamsInputEnvelope
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
  }

  export type team_membersCreateNestedManyWithoutTeamsInput = {
    create?: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput> | team_membersCreateWithoutTeamsInput[] | team_membersUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutTeamsInput | team_membersCreateOrConnectWithoutTeamsInput[]
    createMany?: team_membersCreateManyTeamsInputEnvelope
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutTeamsInput = {
    create?: XOR<UserCreateWithoutTeamsInput, UserUncheckedCreateWithoutTeamsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeamsInput
    connect?: UserWhereUniqueInput
  }

  export type transactionsCreateNestedManyWithoutTeamsInput = {
    create?: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput> | transactionsCreateWithoutTeamsInput[] | transactionsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutTeamsInput | transactionsCreateOrConnectWithoutTeamsInput[]
    createMany?: transactionsCreateManyTeamsInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type notificationsUncheckedCreateNestedManyWithoutTeamsInput = {
    create?: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput> | notificationsCreateWithoutTeamsInput[] | notificationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutTeamsInput | notificationsCreateOrConnectWithoutTeamsInput[]
    createMany?: notificationsCreateManyTeamsInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type team_invitationsUncheckedCreateNestedManyWithoutTeamsInput = {
    create?: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput> | team_invitationsCreateWithoutTeamsInput[] | team_invitationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutTeamsInput | team_invitationsCreateOrConnectWithoutTeamsInput[]
    createMany?: team_invitationsCreateManyTeamsInputEnvelope
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
  }

  export type team_membersUncheckedCreateNestedManyWithoutTeamsInput = {
    create?: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput> | team_membersCreateWithoutTeamsInput[] | team_membersUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutTeamsInput | team_membersCreateOrConnectWithoutTeamsInput[]
    createMany?: team_membersCreateManyTeamsInputEnvelope
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
  }

  export type transactionsUncheckedCreateNestedManyWithoutTeamsInput = {
    create?: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput> | transactionsCreateWithoutTeamsInput[] | transactionsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutTeamsInput | transactionsCreateOrConnectWithoutTeamsInput[]
    createMany?: transactionsCreateManyTeamsInputEnvelope
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type notificationsUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput> | notificationsCreateWithoutTeamsInput[] | notificationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutTeamsInput | notificationsCreateOrConnectWithoutTeamsInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutTeamsInput | notificationsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: notificationsCreateManyTeamsInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutTeamsInput | notificationsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutTeamsInput | notificationsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type team_invitationsUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput> | team_invitationsCreateWithoutTeamsInput[] | team_invitationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutTeamsInput | team_invitationsCreateOrConnectWithoutTeamsInput[]
    upsert?: team_invitationsUpsertWithWhereUniqueWithoutTeamsInput | team_invitationsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: team_invitationsCreateManyTeamsInputEnvelope
    set?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    disconnect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    delete?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    update?: team_invitationsUpdateWithWhereUniqueWithoutTeamsInput | team_invitationsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: team_invitationsUpdateManyWithWhereWithoutTeamsInput | team_invitationsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
  }

  export type team_membersUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput> | team_membersCreateWithoutTeamsInput[] | team_membersUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutTeamsInput | team_membersCreateOrConnectWithoutTeamsInput[]
    upsert?: team_membersUpsertWithWhereUniqueWithoutTeamsInput | team_membersUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: team_membersCreateManyTeamsInputEnvelope
    set?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    disconnect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    delete?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    update?: team_membersUpdateWithWhereUniqueWithoutTeamsInput | team_membersUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: team_membersUpdateManyWithWhereWithoutTeamsInput | team_membersUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutTeamsNestedInput = {
    create?: XOR<UserCreateWithoutTeamsInput, UserUncheckedCreateWithoutTeamsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTeamsInput
    upsert?: UserUpsertWithoutTeamsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTeamsInput, UserUpdateWithoutTeamsInput>, UserUncheckedUpdateWithoutTeamsInput>
  }

  export type transactionsUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput> | transactionsCreateWithoutTeamsInput[] | transactionsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutTeamsInput | transactionsCreateOrConnectWithoutTeamsInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutTeamsInput | transactionsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: transactionsCreateManyTeamsInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutTeamsInput | transactionsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutTeamsInput | transactionsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type notificationsUncheckedUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput> | notificationsCreateWithoutTeamsInput[] | notificationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutTeamsInput | notificationsCreateOrConnectWithoutTeamsInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutTeamsInput | notificationsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: notificationsCreateManyTeamsInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutTeamsInput | notificationsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutTeamsInput | notificationsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput> | team_invitationsCreateWithoutTeamsInput[] | team_invitationsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_invitationsCreateOrConnectWithoutTeamsInput | team_invitationsCreateOrConnectWithoutTeamsInput[]
    upsert?: team_invitationsUpsertWithWhereUniqueWithoutTeamsInput | team_invitationsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: team_invitationsCreateManyTeamsInputEnvelope
    set?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    disconnect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    delete?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    connect?: team_invitationsWhereUniqueInput | team_invitationsWhereUniqueInput[]
    update?: team_invitationsUpdateWithWhereUniqueWithoutTeamsInput | team_invitationsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: team_invitationsUpdateManyWithWhereWithoutTeamsInput | team_invitationsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
  }

  export type team_membersUncheckedUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput> | team_membersCreateWithoutTeamsInput[] | team_membersUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: team_membersCreateOrConnectWithoutTeamsInput | team_membersCreateOrConnectWithoutTeamsInput[]
    upsert?: team_membersUpsertWithWhereUniqueWithoutTeamsInput | team_membersUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: team_membersCreateManyTeamsInputEnvelope
    set?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    disconnect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    delete?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    connect?: team_membersWhereUniqueInput | team_membersWhereUniqueInput[]
    update?: team_membersUpdateWithWhereUniqueWithoutTeamsInput | team_membersUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: team_membersUpdateManyWithWhereWithoutTeamsInput | team_membersUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
  }

  export type transactionsUncheckedUpdateManyWithoutTeamsNestedInput = {
    create?: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput> | transactionsCreateWithoutTeamsInput[] | transactionsUncheckedCreateWithoutTeamsInput[]
    connectOrCreate?: transactionsCreateOrConnectWithoutTeamsInput | transactionsCreateOrConnectWithoutTeamsInput[]
    upsert?: transactionsUpsertWithWhereUniqueWithoutTeamsInput | transactionsUpsertWithWhereUniqueWithoutTeamsInput[]
    createMany?: transactionsCreateManyTeamsInputEnvelope
    set?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    disconnect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    delete?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    connect?: transactionsWhereUniqueInput | transactionsWhereUniqueInput[]
    update?: transactionsUpdateWithWhereUniqueWithoutTeamsInput | transactionsUpdateWithWhereUniqueWithoutTeamsInput[]
    updateMany?: transactionsUpdateManyWithWhereWithoutTeamsInput | transactionsUpdateManyWithWhereWithoutTeamsInput[]
    deleteMany?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
  }

  export type change_requestsCreateNestedManyWithoutTransactionsInput = {
    create?: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput> | change_requestsCreateWithoutTransactionsInput[] | change_requestsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutTransactionsInput | change_requestsCreateOrConnectWithoutTransactionsInput[]
    createMany?: change_requestsCreateManyTransactionsInputEnvelope
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
  }

  export type teamsCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<teamsCreateWithoutTransactionsInput, teamsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTransactionsInput
    connect?: teamsWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransactionsInput
    connect?: UserWhereUniqueInput
  }

  export type change_requestsUncheckedCreateNestedManyWithoutTransactionsInput = {
    create?: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput> | change_requestsCreateWithoutTransactionsInput[] | change_requestsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutTransactionsInput | change_requestsCreateOrConnectWithoutTransactionsInput[]
    createMany?: change_requestsCreateManyTransactionsInputEnvelope
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Enumtransaction_typeFieldUpdateOperationsInput = {
    set?: $Enums.transaction_type
  }

  export type change_requestsUpdateManyWithoutTransactionsNestedInput = {
    create?: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput> | change_requestsCreateWithoutTransactionsInput[] | change_requestsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutTransactionsInput | change_requestsCreateOrConnectWithoutTransactionsInput[]
    upsert?: change_requestsUpsertWithWhereUniqueWithoutTransactionsInput | change_requestsUpsertWithWhereUniqueWithoutTransactionsInput[]
    createMany?: change_requestsCreateManyTransactionsInputEnvelope
    set?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    disconnect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    delete?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    update?: change_requestsUpdateWithWhereUniqueWithoutTransactionsInput | change_requestsUpdateWithWhereUniqueWithoutTransactionsInput[]
    updateMany?: change_requestsUpdateManyWithWhereWithoutTransactionsInput | change_requestsUpdateManyWithWhereWithoutTransactionsInput[]
    deleteMany?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
  }

  export type teamsUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<teamsCreateWithoutTransactionsInput, teamsUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: teamsCreateOrConnectWithoutTransactionsInput
    upsert?: teamsUpsertWithoutTransactionsInput
    connect?: teamsWhereUniqueInput
    update?: XOR<XOR<teamsUpdateToOneWithWhereWithoutTransactionsInput, teamsUpdateWithoutTransactionsInput>, teamsUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransactionsInput
    upsert?: UserUpsertWithoutTransactionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransactionsInput, UserUpdateWithoutTransactionsInput>, UserUncheckedUpdateWithoutTransactionsInput>
  }

  export type change_requestsUncheckedUpdateManyWithoutTransactionsNestedInput = {
    create?: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput> | change_requestsCreateWithoutTransactionsInput[] | change_requestsUncheckedCreateWithoutTransactionsInput[]
    connectOrCreate?: change_requestsCreateOrConnectWithoutTransactionsInput | change_requestsCreateOrConnectWithoutTransactionsInput[]
    upsert?: change_requestsUpsertWithWhereUniqueWithoutTransactionsInput | change_requestsUpsertWithWhereUniqueWithoutTransactionsInput[]
    createMany?: change_requestsCreateManyTransactionsInputEnvelope
    set?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    disconnect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    delete?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    connect?: change_requestsWhereUniqueInput | change_requestsWhereUniqueInput[]
    update?: change_requestsUpdateWithWhereUniqueWithoutTransactionsInput | change_requestsUpdateWithWhereUniqueWithoutTransactionsInput[]
    updateMany?: change_requestsUpdateManyWithWhereWithoutTransactionsInput | change_requestsUpdateManyWithWhereWithoutTransactionsInput[]
    deleteMany?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumchange_request_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.change_request_status | Enumchange_request_statusFieldRefInput<$PrismaModel>
    in?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumchange_request_statusFilter<$PrismaModel> | $Enums.change_request_status
  }

  export type NestedEnumchange_request_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.change_request_status | Enumchange_request_statusFieldRefInput<$PrismaModel>
    in?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.change_request_status[] | ListEnumchange_request_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumchange_request_statusWithAggregatesFilter<$PrismaModel> | $Enums.change_request_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumchange_request_statusFilter<$PrismaModel>
    _max?: NestedEnumchange_request_statusFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedEnuminvitation_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.invitation_status | Enuminvitation_statusFieldRefInput<$PrismaModel>
    in?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    not?: NestedEnuminvitation_statusFilter<$PrismaModel> | $Enums.invitation_status
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnuminvitation_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.invitation_status | Enuminvitation_statusFieldRefInput<$PrismaModel>
    in?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.invitation_status[] | ListEnuminvitation_statusFieldRefInput<$PrismaModel>
    not?: NestedEnuminvitation_statusWithAggregatesFilter<$PrismaModel> | $Enums.invitation_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnuminvitation_statusFilter<$PrismaModel>
    _max?: NestedEnuminvitation_statusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumtransaction_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type | Enumtransaction_typeFieldRefInput<$PrismaModel>
    in?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumtransaction_typeFilter<$PrismaModel> | $Enums.transaction_type
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumtransaction_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaction_type | Enumtransaction_typeFieldRefInput<$PrismaModel>
    in?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.transaction_type[] | ListEnumtransaction_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumtransaction_typeWithAggregatesFilter<$PrismaModel> | $Enums.transaction_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtransaction_typeFilter<$PrismaModel>
    _max?: NestedEnumtransaction_typeFilter<$PrismaModel>
  }

  export type change_requestsCreateWithoutUserInput = {
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    transactions: transactionsCreateNestedOneWithoutChange_requestsInput
  }

  export type change_requestsUncheckedCreateWithoutUserInput = {
    id?: number
    target_transaction_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsCreateOrConnectWithoutUserInput = {
    where: change_requestsWhereUniqueInput
    create: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput>
  }

  export type change_requestsCreateManyUserInputEnvelope = {
    data: change_requestsCreateManyUserInput | change_requestsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type notificationsCreateWithoutUserInput = {
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
    teams?: teamsCreateNestedOneWithoutNotificationsInput
  }

  export type notificationsUncheckedCreateWithoutUserInput = {
    id?: number
    team_id?: number | null
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type notificationsCreateOrConnectWithoutUserInput = {
    where: notificationsWhereUniqueInput
    create: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput>
  }

  export type notificationsCreateManyUserInputEnvelope = {
    data: notificationsCreateManyUserInput | notificationsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type team_invitationsCreateWithoutUserInput = {
    token?: string
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
    teams: teamsCreateNestedOneWithoutTeam_invitationsInput
  }

  export type team_invitationsUncheckedCreateWithoutUserInput = {
    id?: number
    token?: string
    team_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_invitationsCreateOrConnectWithoutUserInput = {
    where: team_invitationsWhereUniqueInput
    create: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput>
  }

  export type team_invitationsCreateManyUserInputEnvelope = {
    data: team_invitationsCreateManyUserInput | team_invitationsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type team_membersCreateWithoutUserInput = {
    role?: string | null
    joined_at?: Date | string | null
    teams: teamsCreateNestedOneWithoutTeam_membersInput
  }

  export type team_membersUncheckedCreateWithoutUserInput = {
    team_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type team_membersCreateOrConnectWithoutUserInput = {
    where: team_membersWhereUniqueInput
    create: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput>
  }

  export type team_membersCreateManyUserInputEnvelope = {
    data: team_membersCreateManyUserInput | team_membersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type teamsCreateWithoutUserInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsCreateNestedManyWithoutTeamsInput
    team_members?: team_membersCreateNestedManyWithoutTeamsInput
    transactions?: transactionsCreateNestedManyWithoutTeamsInput
  }

  export type teamsUncheckedCreateWithoutUserInput = {
    id?: number
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutTeamsInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutTeamsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsCreateOrConnectWithoutUserInput = {
    where: teamsWhereUniqueInput
    create: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput>
  }

  export type teamsCreateManyUserInputEnvelope = {
    data: teamsCreateManyUserInput | teamsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type transactionsCreateWithoutUserInput = {
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutTransactionsInput
    teams: teamsCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateWithoutUserInput = {
    id?: number
    team_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type transactionsCreateOrConnectWithoutUserInput = {
    where: transactionsWhereUniqueInput
    create: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput>
  }

  export type transactionsCreateManyUserInputEnvelope = {
    data: transactionsCreateManyUserInput | transactionsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type change_requestsUpsertWithWhereUniqueWithoutUserInput = {
    where: change_requestsWhereUniqueInput
    update: XOR<change_requestsUpdateWithoutUserInput, change_requestsUncheckedUpdateWithoutUserInput>
    create: XOR<change_requestsCreateWithoutUserInput, change_requestsUncheckedCreateWithoutUserInput>
  }

  export type change_requestsUpdateWithWhereUniqueWithoutUserInput = {
    where: change_requestsWhereUniqueInput
    data: XOR<change_requestsUpdateWithoutUserInput, change_requestsUncheckedUpdateWithoutUserInput>
  }

  export type change_requestsUpdateManyWithWhereWithoutUserInput = {
    where: change_requestsScalarWhereInput
    data: XOR<change_requestsUpdateManyMutationInput, change_requestsUncheckedUpdateManyWithoutUserInput>
  }

  export type change_requestsScalarWhereInput = {
    AND?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
    OR?: change_requestsScalarWhereInput[]
    NOT?: change_requestsScalarWhereInput | change_requestsScalarWhereInput[]
    id?: IntFilter<"change_requests"> | number
    requester_id?: IntFilter<"change_requests"> | number
    target_transaction_id?: IntFilter<"change_requests"> | number
    type?: StringFilter<"change_requests"> | string
    status?: Enumchange_request_statusFilter<"change_requests"> | $Enums.change_request_status
    reason?: StringFilter<"change_requests"> | string
    created_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"change_requests"> | Date | string | null
  }

  export type notificationsUpsertWithWhereUniqueWithoutUserInput = {
    where: notificationsWhereUniqueInput
    update: XOR<notificationsUpdateWithoutUserInput, notificationsUncheckedUpdateWithoutUserInput>
    create: XOR<notificationsCreateWithoutUserInput, notificationsUncheckedCreateWithoutUserInput>
  }

  export type notificationsUpdateWithWhereUniqueWithoutUserInput = {
    where: notificationsWhereUniqueInput
    data: XOR<notificationsUpdateWithoutUserInput, notificationsUncheckedUpdateWithoutUserInput>
  }

  export type notificationsUpdateManyWithWhereWithoutUserInput = {
    where: notificationsScalarWhereInput
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyWithoutUserInput>
  }

  export type notificationsScalarWhereInput = {
    AND?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
    OR?: notificationsScalarWhereInput[]
    NOT?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
    id?: IntFilter<"notifications"> | number
    user_id?: IntFilter<"notifications"> | number
    team_id?: IntNullableFilter<"notifications"> | number | null
    type?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    is_read?: BoolNullableFilter<"notifications"> | boolean | null
    related_resource_id?: IntNullableFilter<"notifications"> | number | null
    created_at?: DateTimeNullableFilter<"notifications"> | Date | string | null
  }

  export type team_invitationsUpsertWithWhereUniqueWithoutUserInput = {
    where: team_invitationsWhereUniqueInput
    update: XOR<team_invitationsUpdateWithoutUserInput, team_invitationsUncheckedUpdateWithoutUserInput>
    create: XOR<team_invitationsCreateWithoutUserInput, team_invitationsUncheckedCreateWithoutUserInput>
  }

  export type team_invitationsUpdateWithWhereUniqueWithoutUserInput = {
    where: team_invitationsWhereUniqueInput
    data: XOR<team_invitationsUpdateWithoutUserInput, team_invitationsUncheckedUpdateWithoutUserInput>
  }

  export type team_invitationsUpdateManyWithWhereWithoutUserInput = {
    where: team_invitationsScalarWhereInput
    data: XOR<team_invitationsUpdateManyMutationInput, team_invitationsUncheckedUpdateManyWithoutUserInput>
  }

  export type team_invitationsScalarWhereInput = {
    AND?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
    OR?: team_invitationsScalarWhereInput[]
    NOT?: team_invitationsScalarWhereInput | team_invitationsScalarWhereInput[]
    id?: IntFilter<"team_invitations"> | number
    token?: UuidFilter<"team_invitations"> | string
    team_id?: IntFilter<"team_invitations"> | number
    inviter_id?: IntFilter<"team_invitations"> | number
    invitee_email?: StringFilter<"team_invitations"> | string
    status?: Enuminvitation_statusFilter<"team_invitations"> | $Enums.invitation_status
    created_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"team_invitations"> | Date | string | null
  }

  export type team_membersUpsertWithWhereUniqueWithoutUserInput = {
    where: team_membersWhereUniqueInput
    update: XOR<team_membersUpdateWithoutUserInput, team_membersUncheckedUpdateWithoutUserInput>
    create: XOR<team_membersCreateWithoutUserInput, team_membersUncheckedCreateWithoutUserInput>
  }

  export type team_membersUpdateWithWhereUniqueWithoutUserInput = {
    where: team_membersWhereUniqueInput
    data: XOR<team_membersUpdateWithoutUserInput, team_membersUncheckedUpdateWithoutUserInput>
  }

  export type team_membersUpdateManyWithWhereWithoutUserInput = {
    where: team_membersScalarWhereInput
    data: XOR<team_membersUpdateManyMutationInput, team_membersUncheckedUpdateManyWithoutUserInput>
  }

  export type team_membersScalarWhereInput = {
    AND?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
    OR?: team_membersScalarWhereInput[]
    NOT?: team_membersScalarWhereInput | team_membersScalarWhereInput[]
    team_id?: IntFilter<"team_members"> | number
    user_id?: IntFilter<"team_members"> | number
    role?: StringNullableFilter<"team_members"> | string | null
    joined_at?: DateTimeNullableFilter<"team_members"> | Date | string | null
  }

  export type teamsUpsertWithWhereUniqueWithoutUserInput = {
    where: teamsWhereUniqueInput
    update: XOR<teamsUpdateWithoutUserInput, teamsUncheckedUpdateWithoutUserInput>
    create: XOR<teamsCreateWithoutUserInput, teamsUncheckedCreateWithoutUserInput>
  }

  export type teamsUpdateWithWhereUniqueWithoutUserInput = {
    where: teamsWhereUniqueInput
    data: XOR<teamsUpdateWithoutUserInput, teamsUncheckedUpdateWithoutUserInput>
  }

  export type teamsUpdateManyWithWhereWithoutUserInput = {
    where: teamsScalarWhereInput
    data: XOR<teamsUpdateManyMutationInput, teamsUncheckedUpdateManyWithoutUserInput>
  }

  export type teamsScalarWhereInput = {
    AND?: teamsScalarWhereInput | teamsScalarWhereInput[]
    OR?: teamsScalarWhereInput[]
    NOT?: teamsScalarWhereInput | teamsScalarWhereInput[]
    id?: IntFilter<"teams"> | number
    team_name?: StringFilter<"teams"> | string
    owner_id?: IntFilter<"teams"> | number
    currency?: StringFilter<"teams"> | string
    budget?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    income_goal?: DecimalNullableFilter<"teams"> | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: BoolNullableFilter<"teams"> | boolean | null
    categories?: JsonFilter<"teams">
    created_at?: DateTimeNullableFilter<"teams"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"teams"> | Date | string | null
  }

  export type transactionsUpsertWithWhereUniqueWithoutUserInput = {
    where: transactionsWhereUniqueInput
    update: XOR<transactionsUpdateWithoutUserInput, transactionsUncheckedUpdateWithoutUserInput>
    create: XOR<transactionsCreateWithoutUserInput, transactionsUncheckedCreateWithoutUserInput>
  }

  export type transactionsUpdateWithWhereUniqueWithoutUserInput = {
    where: transactionsWhereUniqueInput
    data: XOR<transactionsUpdateWithoutUserInput, transactionsUncheckedUpdateWithoutUserInput>
  }

  export type transactionsUpdateManyWithWhereWithoutUserInput = {
    where: transactionsScalarWhereInput
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyWithoutUserInput>
  }

  export type transactionsScalarWhereInput = {
    AND?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
    OR?: transactionsScalarWhereInput[]
    NOT?: transactionsScalarWhereInput | transactionsScalarWhereInput[]
    id?: IntFilter<"transactions"> | number
    team_id?: IntFilter<"transactions"> | number
    user_id?: IntFilter<"transactions"> | number
    amount?: DecimalFilter<"transactions"> | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFilter<"transactions"> | $Enums.transaction_type
    category_name?: StringNullableFilter<"transactions"> | string | null
    category_icon?: StringNullableFilter<"transactions"> | string | null
    description?: StringNullableFilter<"transactions"> | string | null
    transaction_date?: DateTimeNullableFilter<"transactions"> | Date | string | null
    created_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"transactions"> | Date | string | null
  }

  export type UserCreateWithoutChange_requestsInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutChange_requestsInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutChange_requestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChange_requestsInput, UserUncheckedCreateWithoutChange_requestsInput>
  }

  export type transactionsCreateWithoutChange_requestsInput = {
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    teams: teamsCreateNestedOneWithoutTransactionsInput
    User: UserCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateWithoutChange_requestsInput = {
    id?: number
    team_id: number
    user_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type transactionsCreateOrConnectWithoutChange_requestsInput = {
    where: transactionsWhereUniqueInput
    create: XOR<transactionsCreateWithoutChange_requestsInput, transactionsUncheckedCreateWithoutChange_requestsInput>
  }

  export type UserUpsertWithoutChange_requestsInput = {
    update: XOR<UserUpdateWithoutChange_requestsInput, UserUncheckedUpdateWithoutChange_requestsInput>
    create: XOR<UserCreateWithoutChange_requestsInput, UserUncheckedCreateWithoutChange_requestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChange_requestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChange_requestsInput, UserUncheckedUpdateWithoutChange_requestsInput>
  }

  export type UserUpdateWithoutChange_requestsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutChange_requestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type transactionsUpsertWithoutChange_requestsInput = {
    update: XOR<transactionsUpdateWithoutChange_requestsInput, transactionsUncheckedUpdateWithoutChange_requestsInput>
    create: XOR<transactionsCreateWithoutChange_requestsInput, transactionsUncheckedCreateWithoutChange_requestsInput>
    where?: transactionsWhereInput
  }

  export type transactionsUpdateToOneWithWhereWithoutChange_requestsInput = {
    where?: transactionsWhereInput
    data: XOR<transactionsUpdateWithoutChange_requestsInput, transactionsUncheckedUpdateWithoutChange_requestsInput>
  }

  export type transactionsUpdateWithoutChange_requestsInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneRequiredWithoutTransactionsNestedInput
    User?: UserUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateWithoutChange_requestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamsCreateWithoutNotificationsInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    team_invitations?: team_invitationsCreateNestedManyWithoutTeamsInput
    team_members?: team_membersCreateNestedManyWithoutTeamsInput
    User: UserCreateNestedOneWithoutTeamsInput
    transactions?: transactionsCreateNestedManyWithoutTeamsInput
  }

  export type teamsUncheckedCreateWithoutNotificationsInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutTeamsInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutTeamsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsCreateOrConnectWithoutNotificationsInput = {
    where: teamsWhereUniqueInput
    create: XOR<teamsCreateWithoutNotificationsInput, teamsUncheckedCreateWithoutNotificationsInput>
  }

  export type UserCreateWithoutNotificationsInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type teamsUpsertWithoutNotificationsInput = {
    update: XOR<teamsUpdateWithoutNotificationsInput, teamsUncheckedUpdateWithoutNotificationsInput>
    create: XOR<teamsCreateWithoutNotificationsInput, teamsUncheckedCreateWithoutNotificationsInput>
    where?: teamsWhereInput
  }

  export type teamsUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: teamsWhereInput
    data: XOR<teamsUpdateWithoutNotificationsInput, teamsUncheckedUpdateWithoutNotificationsInput>
  }

  export type teamsUpdateWithoutNotificationsInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team_invitations?: team_invitationsUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUpdateManyWithoutTeamsNestedInput
    User?: UserUpdateOneRequiredWithoutTeamsNestedInput
    transactions?: transactionsUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutTeam_invitationsInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTeam_invitationsInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTeam_invitationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTeam_invitationsInput, UserUncheckedCreateWithoutTeam_invitationsInput>
  }

  export type teamsCreateWithoutTeam_invitationsInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutTeamsInput
    team_members?: team_membersCreateNestedManyWithoutTeamsInput
    User: UserCreateNestedOneWithoutTeamsInput
    transactions?: transactionsCreateNestedManyWithoutTeamsInput
  }

  export type teamsUncheckedCreateWithoutTeam_invitationsInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutTeamsInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutTeamsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsCreateOrConnectWithoutTeam_invitationsInput = {
    where: teamsWhereUniqueInput
    create: XOR<teamsCreateWithoutTeam_invitationsInput, teamsUncheckedCreateWithoutTeam_invitationsInput>
  }

  export type UserUpsertWithoutTeam_invitationsInput = {
    update: XOR<UserUpdateWithoutTeam_invitationsInput, UserUncheckedUpdateWithoutTeam_invitationsInput>
    create: XOR<UserCreateWithoutTeam_invitationsInput, UserUncheckedCreateWithoutTeam_invitationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTeam_invitationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTeam_invitationsInput, UserUncheckedUpdateWithoutTeam_invitationsInput>
  }

  export type UserUpdateWithoutTeam_invitationsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTeam_invitationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type teamsUpsertWithoutTeam_invitationsInput = {
    update: XOR<teamsUpdateWithoutTeam_invitationsInput, teamsUncheckedUpdateWithoutTeam_invitationsInput>
    create: XOR<teamsCreateWithoutTeam_invitationsInput, teamsUncheckedCreateWithoutTeam_invitationsInput>
    where?: teamsWhereInput
  }

  export type teamsUpdateToOneWithWhereWithoutTeam_invitationsInput = {
    where?: teamsWhereInput
    data: XOR<teamsUpdateWithoutTeam_invitationsInput, teamsUncheckedUpdateWithoutTeam_invitationsInput>
  }

  export type teamsUpdateWithoutTeam_invitationsInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUpdateManyWithoutTeamsNestedInput
    User?: UserUpdateOneRequiredWithoutTeamsNestedInput
    transactions?: transactionsUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateWithoutTeam_invitationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type teamsCreateWithoutTeam_membersInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsCreateNestedManyWithoutTeamsInput
    User: UserCreateNestedOneWithoutTeamsInput
    transactions?: transactionsCreateNestedManyWithoutTeamsInput
  }

  export type teamsUncheckedCreateWithoutTeam_membersInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutTeamsInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsCreateOrConnectWithoutTeam_membersInput = {
    where: teamsWhereUniqueInput
    create: XOR<teamsCreateWithoutTeam_membersInput, teamsUncheckedCreateWithoutTeam_membersInput>
  }

  export type UserCreateWithoutTeam_membersInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTeam_membersInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTeam_membersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTeam_membersInput, UserUncheckedCreateWithoutTeam_membersInput>
  }

  export type teamsUpsertWithoutTeam_membersInput = {
    update: XOR<teamsUpdateWithoutTeam_membersInput, teamsUncheckedUpdateWithoutTeam_membersInput>
    create: XOR<teamsCreateWithoutTeam_membersInput, teamsUncheckedCreateWithoutTeam_membersInput>
    where?: teamsWhereInput
  }

  export type teamsUpdateToOneWithWhereWithoutTeam_membersInput = {
    where?: teamsWhereInput
    data: XOR<teamsUpdateWithoutTeam_membersInput, teamsUncheckedUpdateWithoutTeam_membersInput>
  }

  export type teamsUpdateWithoutTeam_membersInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutTeamsNestedInput
    User?: UserUpdateOneRequiredWithoutTeamsNestedInput
    transactions?: transactionsUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type UserUpsertWithoutTeam_membersInput = {
    update: XOR<UserUpdateWithoutTeam_membersInput, UserUncheckedUpdateWithoutTeam_membersInput>
    create: XOR<UserCreateWithoutTeam_membersInput, UserUncheckedCreateWithoutTeam_membersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTeam_membersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTeam_membersInput, UserUncheckedUpdateWithoutTeam_membersInput>
  }

  export type UserUpdateWithoutTeam_membersInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type notificationsCreateWithoutTeamsInput = {
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
    User: UserCreateNestedOneWithoutNotificationsInput
  }

  export type notificationsUncheckedCreateWithoutTeamsInput = {
    id?: number
    user_id: number
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type notificationsCreateOrConnectWithoutTeamsInput = {
    where: notificationsWhereUniqueInput
    create: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput>
  }

  export type notificationsCreateManyTeamsInputEnvelope = {
    data: notificationsCreateManyTeamsInput | notificationsCreateManyTeamsInput[]
    skipDuplicates?: boolean
  }

  export type team_invitationsCreateWithoutTeamsInput = {
    token?: string
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
    User: UserCreateNestedOneWithoutTeam_invitationsInput
  }

  export type team_invitationsUncheckedCreateWithoutTeamsInput = {
    id?: number
    token?: string
    inviter_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_invitationsCreateOrConnectWithoutTeamsInput = {
    where: team_invitationsWhereUniqueInput
    create: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput>
  }

  export type team_invitationsCreateManyTeamsInputEnvelope = {
    data: team_invitationsCreateManyTeamsInput | team_invitationsCreateManyTeamsInput[]
    skipDuplicates?: boolean
  }

  export type team_membersCreateWithoutTeamsInput = {
    role?: string | null
    joined_at?: Date | string | null
    User: UserCreateNestedOneWithoutTeam_membersInput
  }

  export type team_membersUncheckedCreateWithoutTeamsInput = {
    user_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type team_membersCreateOrConnectWithoutTeamsInput = {
    where: team_membersWhereUniqueInput
    create: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput>
  }

  export type team_membersCreateManyTeamsInputEnvelope = {
    data: team_membersCreateManyTeamsInput | team_membersCreateManyTeamsInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTeamsInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    transactions?: transactionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTeamsInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    transactions?: transactionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTeamsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTeamsInput, UserUncheckedCreateWithoutTeamsInput>
  }

  export type transactionsCreateWithoutTeamsInput = {
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutTransactionsInput
    User: UserCreateNestedOneWithoutTransactionsInput
  }

  export type transactionsUncheckedCreateWithoutTeamsInput = {
    id?: number
    user_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutTransactionsInput
  }

  export type transactionsCreateOrConnectWithoutTeamsInput = {
    where: transactionsWhereUniqueInput
    create: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput>
  }

  export type transactionsCreateManyTeamsInputEnvelope = {
    data: transactionsCreateManyTeamsInput | transactionsCreateManyTeamsInput[]
    skipDuplicates?: boolean
  }

  export type notificationsUpsertWithWhereUniqueWithoutTeamsInput = {
    where: notificationsWhereUniqueInput
    update: XOR<notificationsUpdateWithoutTeamsInput, notificationsUncheckedUpdateWithoutTeamsInput>
    create: XOR<notificationsCreateWithoutTeamsInput, notificationsUncheckedCreateWithoutTeamsInput>
  }

  export type notificationsUpdateWithWhereUniqueWithoutTeamsInput = {
    where: notificationsWhereUniqueInput
    data: XOR<notificationsUpdateWithoutTeamsInput, notificationsUncheckedUpdateWithoutTeamsInput>
  }

  export type notificationsUpdateManyWithWhereWithoutTeamsInput = {
    where: notificationsScalarWhereInput
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyWithoutTeamsInput>
  }

  export type team_invitationsUpsertWithWhereUniqueWithoutTeamsInput = {
    where: team_invitationsWhereUniqueInput
    update: XOR<team_invitationsUpdateWithoutTeamsInput, team_invitationsUncheckedUpdateWithoutTeamsInput>
    create: XOR<team_invitationsCreateWithoutTeamsInput, team_invitationsUncheckedCreateWithoutTeamsInput>
  }

  export type team_invitationsUpdateWithWhereUniqueWithoutTeamsInput = {
    where: team_invitationsWhereUniqueInput
    data: XOR<team_invitationsUpdateWithoutTeamsInput, team_invitationsUncheckedUpdateWithoutTeamsInput>
  }

  export type team_invitationsUpdateManyWithWhereWithoutTeamsInput = {
    where: team_invitationsScalarWhereInput
    data: XOR<team_invitationsUpdateManyMutationInput, team_invitationsUncheckedUpdateManyWithoutTeamsInput>
  }

  export type team_membersUpsertWithWhereUniqueWithoutTeamsInput = {
    where: team_membersWhereUniqueInput
    update: XOR<team_membersUpdateWithoutTeamsInput, team_membersUncheckedUpdateWithoutTeamsInput>
    create: XOR<team_membersCreateWithoutTeamsInput, team_membersUncheckedCreateWithoutTeamsInput>
  }

  export type team_membersUpdateWithWhereUniqueWithoutTeamsInput = {
    where: team_membersWhereUniqueInput
    data: XOR<team_membersUpdateWithoutTeamsInput, team_membersUncheckedUpdateWithoutTeamsInput>
  }

  export type team_membersUpdateManyWithWhereWithoutTeamsInput = {
    where: team_membersScalarWhereInput
    data: XOR<team_membersUpdateManyMutationInput, team_membersUncheckedUpdateManyWithoutTeamsInput>
  }

  export type UserUpsertWithoutTeamsInput = {
    update: XOR<UserUpdateWithoutTeamsInput, UserUncheckedUpdateWithoutTeamsInput>
    create: XOR<UserCreateWithoutTeamsInput, UserUncheckedCreateWithoutTeamsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTeamsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTeamsInput, UserUncheckedUpdateWithoutTeamsInput>
  }

  export type UserUpdateWithoutTeamsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    transactions?: transactionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type transactionsUpsertWithWhereUniqueWithoutTeamsInput = {
    where: transactionsWhereUniqueInput
    update: XOR<transactionsUpdateWithoutTeamsInput, transactionsUncheckedUpdateWithoutTeamsInput>
    create: XOR<transactionsCreateWithoutTeamsInput, transactionsUncheckedCreateWithoutTeamsInput>
  }

  export type transactionsUpdateWithWhereUniqueWithoutTeamsInput = {
    where: transactionsWhereUniqueInput
    data: XOR<transactionsUpdateWithoutTeamsInput, transactionsUncheckedUpdateWithoutTeamsInput>
  }

  export type transactionsUpdateManyWithWhereWithoutTeamsInput = {
    where: transactionsScalarWhereInput
    data: XOR<transactionsUpdateManyMutationInput, transactionsUncheckedUpdateManyWithoutTeamsInput>
  }

  export type change_requestsCreateWithoutTransactionsInput = {
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    User: UserCreateNestedOneWithoutChange_requestsInput
  }

  export type change_requestsUncheckedCreateWithoutTransactionsInput = {
    id?: number
    requester_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsCreateOrConnectWithoutTransactionsInput = {
    where: change_requestsWhereUniqueInput
    create: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput>
  }

  export type change_requestsCreateManyTransactionsInputEnvelope = {
    data: change_requestsCreateManyTransactionsInput | change_requestsCreateManyTransactionsInput[]
    skipDuplicates?: boolean
  }

  export type teamsCreateWithoutTransactionsInput = {
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsCreateNestedManyWithoutTeamsInput
    team_members?: team_membersCreateNestedManyWithoutTeamsInput
    User: UserCreateNestedOneWithoutTeamsInput
  }

  export type teamsUncheckedCreateWithoutTransactionsInput = {
    id?: number
    team_name: string
    owner_id: number
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    notifications?: notificationsUncheckedCreateNestedManyWithoutTeamsInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutTeamsInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutTeamsInput
  }

  export type teamsCreateOrConnectWithoutTransactionsInput = {
    where: teamsWhereUniqueInput
    create: XOR<teamsCreateWithoutTransactionsInput, teamsUncheckedCreateWithoutTransactionsInput>
  }

  export type UserCreateWithoutTransactionsInput = {
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsCreateNestedManyWithoutUserInput
    notifications?: notificationsCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsCreateNestedManyWithoutUserInput
    team_members?: team_membersCreateNestedManyWithoutUserInput
    teams?: teamsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTransactionsInput = {
    id?: number
    firstName: string
    lastName: string
    email: string
    passwordHash: string
    gender?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    change_requests?: change_requestsUncheckedCreateNestedManyWithoutUserInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUserInput
    team_invitations?: team_invitationsUncheckedCreateNestedManyWithoutUserInput
    team_members?: team_membersUncheckedCreateNestedManyWithoutUserInput
    teams?: teamsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTransactionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
  }

  export type change_requestsUpsertWithWhereUniqueWithoutTransactionsInput = {
    where: change_requestsWhereUniqueInput
    update: XOR<change_requestsUpdateWithoutTransactionsInput, change_requestsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<change_requestsCreateWithoutTransactionsInput, change_requestsUncheckedCreateWithoutTransactionsInput>
  }

  export type change_requestsUpdateWithWhereUniqueWithoutTransactionsInput = {
    where: change_requestsWhereUniqueInput
    data: XOR<change_requestsUpdateWithoutTransactionsInput, change_requestsUncheckedUpdateWithoutTransactionsInput>
  }

  export type change_requestsUpdateManyWithWhereWithoutTransactionsInput = {
    where: change_requestsScalarWhereInput
    data: XOR<change_requestsUpdateManyMutationInput, change_requestsUncheckedUpdateManyWithoutTransactionsInput>
  }

  export type teamsUpsertWithoutTransactionsInput = {
    update: XOR<teamsUpdateWithoutTransactionsInput, teamsUncheckedUpdateWithoutTransactionsInput>
    create: XOR<teamsCreateWithoutTransactionsInput, teamsUncheckedCreateWithoutTransactionsInput>
    where?: teamsWhereInput
  }

  export type teamsUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: teamsWhereInput
    data: XOR<teamsUpdateWithoutTransactionsInput, teamsUncheckedUpdateWithoutTransactionsInput>
  }

  export type teamsUpdateWithoutTransactionsInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUpdateManyWithoutTeamsNestedInput
    User?: UserUpdateOneRequiredWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateWithoutTransactionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    owner_id?: IntFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type UserUpsertWithoutTransactionsInput = {
    update: XOR<UserUpdateWithoutTransactionsInput, UserUncheckedUpdateWithoutTransactionsInput>
    create: XOR<UserCreateWithoutTransactionsInput, UserUncheckedCreateWithoutTransactionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransactionsInput, UserUncheckedUpdateWithoutTransactionsInput>
  }

  export type UserUpdateWithoutTransactionsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutUserNestedInput
    notifications?: notificationsUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutUserNestedInput
    team_members?: team_membersUpdateManyWithoutUserNestedInput
    teams?: teamsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTransactionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutUserNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUserNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutUserNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutUserNestedInput
    teams?: teamsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type change_requestsCreateManyUserInput = {
    id?: number
    target_transaction_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationsCreateManyUserInput = {
    id?: number
    team_id?: number | null
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type team_invitationsCreateManyUserInput = {
    id?: number
    token?: string
    team_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_membersCreateManyUserInput = {
    team_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type teamsCreateManyUserInput = {
    id?: number
    team_name: string
    currency?: string
    budget?: Decimal | DecimalJsLike | number | string | null
    income_goal?: Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type transactionsCreateManyUserInput = {
    id?: number
    team_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transactions?: transactionsUpdateOneRequiredWithoutChange_requestsNestedInput
  }

  export type change_requestsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    target_transaction_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    target_transaction_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneWithoutNotificationsNestedInput
  }

  export type notificationsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneRequiredWithoutTeam_invitationsNestedInput
  }

  export type team_invitationsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    team_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    team_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersUpdateWithoutUserInput = {
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    teams?: teamsUpdateOneRequiredWithoutTeam_membersNestedInput
  }

  export type team_membersUncheckedUpdateWithoutUserInput = {
    team_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersUncheckedUpdateManyWithoutUserInput = {
    team_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamsUpdateWithoutUserInput = {
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifications?: notificationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_invitations?: team_invitationsUncheckedUpdateManyWithoutTeamsNestedInput
    team_members?: team_membersUncheckedUpdateManyWithoutTeamsNestedInput
    transactions?: transactionsUncheckedUpdateManyWithoutTeamsNestedInput
  }

  export type teamsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    budget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_goal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    allow_member_view_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
    categories?: JsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUpdateWithoutUserInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutTransactionsNestedInput
    teams?: teamsUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsCreateManyTeamsInput = {
    id?: number
    user_id: number
    type: string
    message: string
    is_read?: boolean | null
    related_resource_id?: number | null
    created_at?: Date | string | null
  }

  export type team_invitationsCreateManyTeamsInput = {
    id?: number
    token?: string
    inviter_id: number
    invitee_email: string
    status?: $Enums.invitation_status
    created_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type team_membersCreateManyTeamsInput = {
    user_id: number
    role?: string | null
    joined_at?: Date | string | null
  }

  export type transactionsCreateManyTeamsInput = {
    id?: number
    user_id: number
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.transaction_type
    category_name?: string | null
    category_icon?: string | null
    description?: string | null
    transaction_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationsUpdateWithoutTeamsInput = {
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type notificationsUncheckedUpdateWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationsUncheckedUpdateManyWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    related_resource_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsUpdateWithoutTeamsInput = {
    token?: StringFieldUpdateOperationsInput | string
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTeam_invitationsNestedInput
  }

  export type team_invitationsUncheckedUpdateWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    inviter_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_invitationsUncheckedUpdateManyWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    inviter_id?: IntFieldUpdateOperationsInput | number
    invitee_email?: StringFieldUpdateOperationsInput | string
    status?: Enuminvitation_statusFieldUpdateOperationsInput | $Enums.invitation_status
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersUpdateWithoutTeamsInput = {
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTeam_membersNestedInput
  }

  export type team_membersUncheckedUpdateWithoutTeamsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_membersUncheckedUpdateManyWithoutTeamsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    role?: NullableStringFieldUpdateOperationsInput | string | null
    joined_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transactionsUpdateWithoutTeamsInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUpdateManyWithoutTransactionsNestedInput
    User?: UserUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    change_requests?: change_requestsUncheckedUpdateManyWithoutTransactionsNestedInput
  }

  export type transactionsUncheckedUpdateManyWithoutTeamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: Enumtransaction_typeFieldUpdateOperationsInput | $Enums.transaction_type
    category_name?: NullableStringFieldUpdateOperationsInput | string | null
    category_icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsCreateManyTransactionsInput = {
    id?: number
    requester_id: number
    type: string
    status?: $Enums.change_request_status
    reason: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type change_requestsUpdateWithoutTransactionsInput = {
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutChange_requestsNestedInput
  }

  export type change_requestsUncheckedUpdateWithoutTransactionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    requester_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type change_requestsUncheckedUpdateManyWithoutTransactionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    requester_id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    status?: Enumchange_request_statusFieldUpdateOperationsInput | $Enums.change_request_status
    reason?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}